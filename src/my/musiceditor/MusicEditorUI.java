

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.musiceditor;


import java.awt.BasicStroke;
import javax.sound.midi.MidiUnavailableException;
import javax.sound.midi.MidiSystem;
import javax.sound.midi.MidiChannel;
import javax.sound.midi.Synthesizer;
import javax.sound.midi.*;
import javax.sound.midi.MidiEvent;
import javax.sound.midi.Soundbank;
import javax.sound.midi.Instrument;

import java.time.Clock;
import java.time.Duration;
import java.lang.String;

import java.lang.Math;
import java.util.*;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Stroke;
import static java.awt.event.ActionEvent.ACTION_PERFORMED;
import static java.lang.Math.cos;
import static java.lang.Math.round;
import static java.lang.Math.sin;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
/**
 *
 * @author Botte
 */

public class MusicEditorUI extends javax.swing.JFrame {
    int ySkew = 30;
    
    int xStart = 0;
    int yStart = 0;
    ArrayList<Double> Shape1Points = new ArrayList<>();
    ArrayList<Double> Shape2Points = new ArrayList<>();
    ArrayList<Double> Shape3Points = new ArrayList<>();
    ArrayList<Double> Shape4Points = new ArrayList<>();
    ArrayList<Double> Shape5Points = new ArrayList<>();
    
    //x = 275 + 230.5 cos(α)
    //275 +230.5cos(90-α)
    //y = 253 + 230.5 sin(α)
    //253 - 230.5sin(90-α)
    
    Double[] sides1 = {275.00, 22.50, 275.00, 483.0};
    Double[] sides2 = {275.00, 22.50, 474.00, 367.00, 75.80, 367.00};
    Double[] sides3 = {275.00, 22.50, 505.50, 252.5 ,275.00, 483.00, 44.50, 252.50};
    Double[] sides4 = {275.00, 22.5, 494.22, 181.77, 410.48, 439.48, 139.52, 439.48, 55.78, 181.77};
    Double[] sides5 = {275.0, 22.5, 474.62, 137.75, 474.62, 368.25, 275.0, 483.5, 75.38, 368.25, 75.38, 137.75};
    Double[] sides6 = {275.0, 22.5, 455.21, 109.29, 499.72, 304.29, 375.01, 460.67, 174.99, 460.67, 50.28, 304.29, 94.79, 109.29};
    Double[] sides7 = {275.0, 22.5, 437.99, 90.01, 505.5, 253.0, 437.99, 415.99, 275.0, 483.5, 112.01, 415.99, 44.5, 253.0, 112.01, 90.01};
    Double[] sides8 = {275.0, 22.5, 423.16, 76.43, 502.0, 212.97, 474.62, 368.25, 353.84, 469.6, 196.16, 469.6, 75.38, 368.25, 48.0, 212.97, 126.84, 76.43};
    Double[] sides9 = {275.0, 22.5, 410.48, 66.52, 494.22, 181.77, 494.22, 324.23, 410.48, 439.48, 275.0, 483.5, 139.52, 439.48, 55.78, 324.23, 55.78, 181.77, 139.52, 66.52};
    Double[] sides10 = {275.0, 22.5, 399.62, 59.09, 484.67, 157.25, 503.15, 285.8, 449.2, 403.95, 339.94, 474.16, 210.06, 474.16, 100.8, 403.95, 46.85, 285.8, 65.33, 157.25, 150.38, 59.09};
    Double[] sides11 = {275.0, 22.5, 390.25, 53.38, 474.62, 137.75, 505.5, 253.0, 474.62, 368.25, 390.25, 452.62, 275.0, 483.5, 159.75, 452.62, 75.38, 368.25, 44.5, 253.0, 75.38, 137.75, 159.75, 53.38};
    Double[] sides12 = {275.0, 22.5, 382.12, 48.9, 464.7, 122.06, 503.82, 225.22, 490.52, 334.74, 427.85, 425.53, 330.16, 476.8, 219.84, 476.8, 122.15, 425.53, 59.48, 334.74, 46.18, 225.22, 85.3, 122.06, 167.88, 48.9};
    Double[] sides13 = {275.0, 22.5, 375.01, 45.33, 455.21, 109.29, 499.72, 201.71, 499.72, 304.29, 455.21, 396.71, 375.01, 460.67, 275.0, 483.5, 174.99, 460.67, 94.79, 396.71, 50.28, 304.29, 50.28, 201.71, 94.79, 109.29, 174.99, 45.33};
    Double[] sides14 = {275.0, 22.5, 368.75, 42.43, 446.29, 98.77, 494.22, 181.77, 504.24, 277.09, 474.62, 368.25, 410.48, 439.48, 322.92, 478.46, 227.08, 478.46, 139.52, 439.48, 75.38, 368.25, 45.76, 277.09, 55.78, 181.77, 103.71, 98.77, 181.25, 42.43};
    Double[] sides15 = {275.0, 22.5, 363.21, 40.05, 437.99, 90.01, 487.95, 164.79, 505.5, 253.0, 487.95, 341.21, 437.99, 415.99, 363.21, 465.95, 275.0, 483.5, 186.79, 465.95, 112.01, 415.99, 62.05, 341.21, 44.5, 253.0, 62.05, 164.79, 112.01, 90.01, 186.79, 40.0};
    Double[] ain30 = {275.00, 22.50, 474.62, 137.75, 474.62, 368.25, 275.0, 483.5, 75.38, 368.25, 75.80, 367.00};
    
    
    
    List<Integer> trackOne = new ArrayList<Integer>();

    /**
     * Creates new form MusicEditorUI
     */
    public MusicEditorUI() {
        initComponents();
        //jTable1.getColumnModel().getColumn(0).setPreferredWidth(60);
        //for(int i = 1;i < 82;i++){
        //    jTable1.getColumnModel().getColumn(i).setPreferredWidth(30);
        //}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Shape5 = new javax.swing.JComboBox<>();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        ChannelSelection5 = new javax.swing.JComboBox<>();
        jLabel65 = new javax.swing.JLabel();
        Rotate11 = new javax.swing.JSlider();
        RotNum11 = new javax.swing.JTextField();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel4 = new javax.swing.JPanel();
        ClosePRE = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        LoadButton = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jButton45 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jButton50 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        jButton57 = new javax.swing.JButton();
        jButton58 = new javax.swing.JButton();
        jButton59 = new javax.swing.JButton();
        jButton60 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton62 = new javax.swing.JButton();
        jButton63 = new javax.swing.JButton();
        jButton64 = new javax.swing.JButton();
        jButton65 = new javax.swing.JButton();
        jButton66 = new javax.swing.JButton();
        jButton67 = new javax.swing.JButton();
        jButton68 = new javax.swing.JButton();
        jButton69 = new javax.swing.JButton();
        jButton70 = new javax.swing.JButton();
        jButton71 = new javax.swing.JButton();
        jButton72 = new javax.swing.JButton();
        PlayButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        Rotate5 = new javax.swing.JSlider();
        RotNum5 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Event3 = new javax.swing.JComboBox<>();
        Step4 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        Event4 = new javax.swing.JComboBox<>();
        Step5 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Event5 = new javax.swing.JComboBox<>();
        Rotate1 = new javax.swing.JSlider();
        RotNum1 = new javax.swing.JTextField();
        Step1 = new javax.swing.JComboBox<>();
        Rotate2 = new javax.swing.JSlider();
        Step2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        RotNum2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Rotate3 = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        RotNum3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Event1 = new javax.swing.JComboBox<>();
        Rotate4 = new javax.swing.JSlider();
        Event2 = new javax.swing.JComboBox<>();
        RotNum4 = new javax.swing.JTextField();
        Step3 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        OpenPRE = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel39 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel40 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel41 = new javax.swing.JLabel();
        jSpinner6 = new javax.swing.JSpinner();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel42 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel19 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        Rotate7 = new javax.swing.JSlider();
        RotNum7 = new javax.swing.JTextField();
        Shape1 = new javax.swing.JComboBox<>();
        jLabel50 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        ChannelSelection1 = new javax.swing.JComboBox<>();
        jLabel58 = new javax.swing.JLabel();
        RotNum8 = new javax.swing.JTextField();
        Rotate8 = new javax.swing.JSlider();
        jLabel55 = new javax.swing.JLabel();
        ChannelSelection2 = new javax.swing.JComboBox<>();
        jLabel53 = new javax.swing.JLabel();
        Shape2 = new javax.swing.JComboBox<>();
        jLabel51 = new javax.swing.JLabel();
        Shape3 = new javax.swing.JComboBox<>();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        ChannelSelection3 = new javax.swing.JComboBox<>();
        jLabel59 = new javax.swing.JLabel();
        Rotate9 = new javax.swing.JSlider();
        RotNum9 = new javax.swing.JTextField();
        Shape4 = new javax.swing.JComboBox<>();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        ChannelSelection4 = new javax.swing.JComboBox<>();
        jLabel62 = new javax.swing.JLabel();
        Rotate10 = new javax.swing.JSlider();
        RotNum10 = new javax.swing.JTextField();
        Shape6 = new javax.swing.JComboBox<>();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        ChannelSelection6 = new javax.swing.JComboBox<>();
        jLabel68 = new javax.swing.JLabel();
        Rotate12 = new javax.swing.JSlider();
        RotNum12 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        Shape5.setBackground(new java.awt.Color(102, 102, 102));
        Shape5.setForeground(new java.awt.Color(255, 255, 255));
        Shape5.setMaximumRowCount(5);
        Shape5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "2-gon", "3-gon", "4-gon", "5-gon", "6-gon" }));
        Shape5.setToolTipText("");
        Shape5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Shape5ActionPerformed(evt);
            }
        });

        jLabel63.setBackground(new java.awt.Color(51, 51, 51));
        jLabel63.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(255, 255, 51));
        jLabel63.setText("Shape:");

        jLabel64.setBackground(new java.awt.Color(51, 51, 51));
        jLabel64.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(255, 255, 0));
        jLabel64.setText("Channel:");

        ChannelSelection5.setBackground(new java.awt.Color(102, 102, 102));
        ChannelSelection5.setForeground(new java.awt.Color(255, 255, 255));
        ChannelSelection5.setMaximumRowCount(8);
        ChannelSelection5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        ChannelSelection5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChannelSelection5ActionPerformed(evt);
            }
        });

        jLabel65.setBackground(new java.awt.Color(51, 51, 51));
        jLabel65.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(255, 255, 0));
        jLabel65.setText("Rotation:");

        Rotate11.setBackground(new java.awt.Color(0, 0, 0));
        Rotate11.setForeground(new java.awt.Color(255, 255, 0));
        Rotate11.setMaximum(90);
        Rotate11.setMinimum(-90);
        Rotate11.setPaintLabels(true);
        Rotate11.setPaintTicks(true);
        Rotate11.setValue(0);
        Rotate11.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate11StateChanged(evt);
            }
        });

        RotNum11.setBackground(new java.awt.Color(51, 51, 51));
        RotNum11.setForeground(new java.awt.Color(255, 255, 0));
        RotNum11.setText("0");
        RotNum11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum11ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setMinimumSize(new java.awt.Dimension(1000, 750));
        setSize(new java.awt.Dimension(1350, 785));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jInternalFrame1.setBackground(new java.awt.Color(255, 51, 255));
        jInternalFrame1.setPreferredSize(new java.awt.Dimension(1000, 600));
        jInternalFrame1.setVisible(true);
        jInternalFrame1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jInternalFrame1ComponentShown(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));
        jPanel4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel4ComponentShown(evt);
            }
        });

        ClosePRE.setText("Close");
        ClosePRE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClosePREMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel2MouseMoved(evt);
            }
        });
        jPanel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel2FocusGained(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel2MouseReleased(evt);
            }
        });
        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });
        jPanel2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 580, Short.MAX_VALUE)
        );

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel20.setText("Mouse X Position: 0");

        LoadButton.setText("Load");
        LoadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadButtonActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel21.setText("G#");
        jLabel21.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel21.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel21.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel22.setText("G");
        jLabel22.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel22.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel22.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel23.setText("F#");
        jLabel23.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel23.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel23.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel24.setText("F");
        jLabel24.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel24.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel24.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel25.setText("E");
        jLabel25.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel25.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel25.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel26.setText("D#");
        jLabel26.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel26.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel26.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel27.setText("D");
        jLabel27.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel27.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel27.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel28.setText("C#");
        jLabel28.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel28.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel28.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel29.setText("C");
        jLabel29.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel29.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel29.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel30.setText("B");
        jLabel30.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel30.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel30.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel31.setText("A#");
        jLabel31.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel31.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel31.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel32.setText("A");
        jLabel32.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel32.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel32.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel33.setText("G#");
        jLabel33.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel33.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel33.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel34.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel34.setText("F#");
        jLabel34.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel34.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel34.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel35.setText("F");
        jLabel35.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel35.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel35.setPreferredSize(new java.awt.Dimension(24, 22));

        jLabel36.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel36.setText("E");
        jLabel36.setMaximumSize(new java.awt.Dimension(24, 22));
        jLabel36.setMinimumSize(new java.awt.Dimension(24, 22));
        jLabel36.setPreferredSize(new java.awt.Dimension(24, 22));

        jToggleButton1.setText("Delete Toggle");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LoadButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClosePRE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ClosePRE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LoadButton)
                        .addComponent(jToggleButton1)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jInternalFrame1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 35, 1380, 680));
        jInternalFrame1.setVisible(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(1300, 648));

        jLabel4.setBackground(new java.awt.Color(51, 51, 51));
        jLabel4.setFont(new java.awt.Font("Rockwell", 0, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setText("B.M.E");

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setForeground(new java.awt.Color(51, 51, 51));
        jPanel3.setDoubleBuffered(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        jLabel5.setBackground(new java.awt.Color(51, 51, 51));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("Presets");

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 153, 153));

        jButton3.setBackground(new java.awt.Color(153, 153, 153));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(153, 153, 153));

        jButton5.setBackground(new java.awt.Color(153, 153, 153));

        jButton6.setBackground(new java.awt.Color(153, 153, 153));

        jButton7.setBackground(new java.awt.Color(153, 153, 153));

        jButton8.setBackground(new java.awt.Color(153, 153, 153));

        jButton9.setBackground(new java.awt.Color(153, 153, 153));

        jButton10.setBackground(new java.awt.Color(153, 153, 153));

        jButton11.setBackground(new java.awt.Color(153, 153, 153));

        jButton12.setBackground(new java.awt.Color(153, 153, 153));

        jButton13.setBackground(new java.awt.Color(153, 153, 153));

        jButton14.setBackground(new java.awt.Color(153, 153, 153));

        jButton15.setBackground(new java.awt.Color(153, 153, 153));

        jButton16.setBackground(new java.awt.Color(153, 153, 153));

        jButton17.setBackground(new java.awt.Color(153, 153, 153));

        jButton18.setBackground(new java.awt.Color(153, 153, 153));

        jButton19.setBackground(new java.awt.Color(153, 153, 153));

        jButton20.setBackground(new java.awt.Color(153, 153, 153));

        jButton21.setBackground(new java.awt.Color(153, 153, 153));

        jButton22.setBackground(new java.awt.Color(153, 153, 153));

        jButton23.setBackground(new java.awt.Color(153, 153, 153));

        jButton24.setBackground(new java.awt.Color(153, 153, 153));

        jButton25.setBackground(new java.awt.Color(153, 153, 153));

        jButton26.setBackground(new java.awt.Color(153, 153, 153));

        jButton27.setBackground(new java.awt.Color(153, 153, 153));

        jButton28.setBackground(new java.awt.Color(153, 153, 153));

        jButton29.setBackground(new java.awt.Color(153, 153, 153));

        jButton30.setBackground(new java.awt.Color(153, 153, 153));

        jButton31.setBackground(new java.awt.Color(153, 153, 153));

        jButton32.setBackground(new java.awt.Color(153, 153, 153));

        jButton33.setBackground(new java.awt.Color(153, 153, 153));

        jButton34.setBackground(new java.awt.Color(153, 153, 153));

        jButton35.setBackground(new java.awt.Color(153, 153, 153));

        jButton36.setBackground(new java.awt.Color(153, 153, 153));

        jButton37.setBackground(new java.awt.Color(153, 153, 153));

        jButton38.setBackground(new java.awt.Color(153, 153, 153));

        jButton39.setBackground(new java.awt.Color(153, 153, 153));

        jButton40.setBackground(new java.awt.Color(153, 153, 153));

        jButton41.setBackground(new java.awt.Color(153, 153, 153));

        jButton42.setBackground(new java.awt.Color(153, 153, 153));

        jButton43.setBackground(new java.awt.Color(153, 153, 153));

        jButton44.setBackground(new java.awt.Color(153, 153, 153));

        jButton45.setBackground(new java.awt.Color(153, 153, 153));

        jButton46.setBackground(new java.awt.Color(153, 153, 153));

        jButton47.setBackground(new java.awt.Color(153, 153, 153));

        jButton48.setBackground(new java.awt.Color(153, 153, 153));

        jButton49.setBackground(new java.awt.Color(153, 153, 153));

        jButton50.setBackground(new java.awt.Color(153, 153, 153));

        jButton51.setBackground(new java.awt.Color(153, 153, 153));

        jButton52.setBackground(new java.awt.Color(153, 153, 153));

        jButton53.setBackground(new java.awt.Color(153, 153, 153));

        jButton54.setBackground(new java.awt.Color(153, 153, 153));

        jButton55.setBackground(new java.awt.Color(153, 153, 153));

        jButton56.setBackground(new java.awt.Color(153, 153, 153));

        jButton57.setBackground(new java.awt.Color(153, 153, 153));

        jButton58.setBackground(new java.awt.Color(153, 153, 153));

        jButton59.setBackground(new java.awt.Color(153, 153, 153));

        jButton60.setBackground(new java.awt.Color(153, 153, 153));

        jButton61.setBackground(new java.awt.Color(153, 153, 153));

        jButton62.setBackground(new java.awt.Color(153, 153, 153));

        jButton63.setBackground(new java.awt.Color(153, 153, 153));

        jButton64.setBackground(new java.awt.Color(153, 153, 153));

        jButton65.setBackground(new java.awt.Color(153, 153, 153));

        jButton66.setBackground(new java.awt.Color(153, 153, 153));

        jButton67.setBackground(new java.awt.Color(153, 153, 153));

        jButton68.setBackground(new java.awt.Color(153, 153, 153));

        jButton69.setBackground(new java.awt.Color(153, 153, 153));

        jButton70.setBackground(new java.awt.Color(153, 153, 153));

        jButton71.setBackground(new java.awt.Color(153, 153, 153));

        jButton72.setBackground(new java.awt.Color(153, 153, 153));

        PlayButton.setBackground(new java.awt.Color(51, 51, 51));
        PlayButton.setForeground(new java.awt.Color(255, 255, 0));
        PlayButton.setText("Play");
        PlayButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PlayButtonMousePressed(evt);
            }
        });

        jPanel5.setBackground(java.awt.Color.darkGray);
        jPanel5.setForeground(new java.awt.Color(255, 255, 0));
        jPanel5.setPreferredSize(new java.awt.Dimension(75, 0));
        jPanel5.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jPanel5ComponentAdded(evt);
            }
        });

        Rotate5.setBackground(new java.awt.Color(0, 0, 0));
        Rotate5.setForeground(new java.awt.Color(255, 255, 0));
        Rotate5.setMaximum(180);
        Rotate5.setMinimum(-180);
        Rotate5.setPaintLabels(true);
        Rotate5.setPaintTicks(true);
        Rotate5.setValue(0);
        Rotate5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate5StateChanged(evt);
            }
        });

        RotNum5.setBackground(new java.awt.Color(51, 51, 51));
        RotNum5.setForeground(new java.awt.Color(255, 255, 0));
        RotNum5.setText("0");
        RotNum5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum5ActionPerformed(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(51, 51, 51));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 0));
        jLabel11.setText("Rotation:");

        Event3.setBackground(new java.awt.Color(102, 102, 102));
        Event3.setForeground(new java.awt.Color(255, 255, 255));
        Event3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16" }));
        Event3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Event3ActionPerformed(evt);
            }
        });

        Step4.setBackground(new java.awt.Color(102, 102, 102));
        Step4.setForeground(new java.awt.Color(255, 255, 255));
        Step4.setMaximumRowCount(5);
        Step4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32" }));
        Step4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Step4ActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(51, 51, 51));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 51));
        jLabel12.setText("Steps:");

        jLabel13.setBackground(new java.awt.Color(51, 51, 51));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 0));
        jLabel13.setText("Events:");

        jLabel14.setBackground(new java.awt.Color(51, 51, 51));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 0));
        jLabel14.setText("Rotation:");

        Event4.setBackground(new java.awt.Color(102, 102, 102));
        Event4.setForeground(new java.awt.Color(255, 255, 255));
        Event4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32" }));
        Event4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Event4ActionPerformed(evt);
            }
        });

        Step5.setBackground(new java.awt.Color(102, 102, 102));
        Step5.setForeground(new java.awt.Color(255, 255, 255));
        Step5.setMaximumRowCount(5);
        Step5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32" }));
        Step5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Step5ActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(51, 51, 51));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 51));
        jLabel15.setText("Steps:");

        jLabel16.setBackground(new java.awt.Color(51, 51, 51));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 0));
        jLabel16.setText("Events:");

        jLabel17.setBackground(new java.awt.Color(51, 51, 51));
        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 0));
        jLabel17.setText("Rotation:");

        Event5.setBackground(new java.awt.Color(102, 102, 102));
        Event5.setForeground(new java.awt.Color(255, 255, 255));
        Event5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32" }));
        Event5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Event5ActionPerformed(evt);
            }
        });

        Rotate1.setBackground(new java.awt.Color(0, 0, 0));
        Rotate1.setForeground(new java.awt.Color(255, 255, 0));
        Rotate1.setMaximum(180);
        Rotate1.setMinimum(-180);
        Rotate1.setPaintLabels(true);
        Rotate1.setPaintTicks(true);
        Rotate1.setValue(0);
        Rotate1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate1StateChanged(evt);
            }
        });

        RotNum1.setBackground(new java.awt.Color(51, 51, 51));
        RotNum1.setForeground(new java.awt.Color(255, 255, 0));
        RotNum1.setText("0");
        RotNum1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum1ActionPerformed(evt);
            }
        });

        Step1.setBackground(new java.awt.Color(102, 102, 102));
        Step1.setForeground(new java.awt.Color(255, 255, 255));
        Step1.setMaximumRowCount(5);
        Step1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));
        Step1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Step1ActionPerformed(evt);
            }
        });

        Rotate2.setBackground(new java.awt.Color(0, 0, 0));
        Rotate2.setForeground(new java.awt.Color(255, 255, 0));
        Rotate2.setMaximum(180);
        Rotate2.setMinimum(-180);
        Rotate2.setPaintLabels(true);
        Rotate2.setPaintTicks(true);
        Rotate2.setValue(0);
        Rotate2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate2StateChanged(evt);
            }
        });

        Step2.setBackground(new java.awt.Color(102, 102, 102));
        Step2.setForeground(new java.awt.Color(255, 255, 255));
        Step2.setMaximumRowCount(5);
        Step2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16" }));
        Step2.setToolTipText("");
        Step2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Step2ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 51));
        jLabel1.setText("Steps:");

        RotNum2.setBackground(new java.awt.Color(51, 51, 51));
        RotNum2.setForeground(new java.awt.Color(255, 255, 0));
        RotNum2.setText("0");
        RotNum2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum2ActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(51, 51, 51));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 51));
        jLabel6.setText("Steps:");

        jLabel2.setBackground(new java.awt.Color(51, 51, 51));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Events:");

        Rotate3.setBackground(new java.awt.Color(0, 0, 0));
        Rotate3.setForeground(new java.awt.Color(255, 255, 0));
        Rotate3.setMaximum(180);
        Rotate3.setMinimum(-180);
        Rotate3.setPaintLabels(true);
        Rotate3.setPaintTicks(true);
        Rotate3.setValue(0);
        Rotate3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate3StateChanged(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(51, 51, 51));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("Events:");

        jLabel3.setBackground(new java.awt.Color(51, 51, 51));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("Rotation:");

        RotNum3.setBackground(new java.awt.Color(51, 51, 51));
        RotNum3.setForeground(new java.awt.Color(255, 255, 0));
        RotNum3.setText("0");
        RotNum3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum3ActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(51, 51, 51));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 0));
        jLabel8.setText("Rotation:");

        Event1.setBackground(new java.awt.Color(102, 102, 102));
        Event1.setForeground(new java.awt.Color(255, 255, 255));
        Event1.setMaximumRowCount(8);
        Event1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));
        Event1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Event1ActionPerformed(evt);
            }
        });

        Rotate4.setBackground(new java.awt.Color(0, 0, 0));
        Rotate4.setForeground(new java.awt.Color(255, 255, 0));
        Rotate4.setMaximum(180);
        Rotate4.setMinimum(-180);
        Rotate4.setPaintLabels(true);
        Rotate4.setPaintTicks(true);
        Rotate4.setValue(0);
        Rotate4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate4StateChanged(evt);
            }
        });

        Event2.setBackground(new java.awt.Color(102, 102, 102));
        Event2.setForeground(new java.awt.Color(255, 255, 255));
        Event2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16" }));
        Event2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Event2ActionPerformed(evt);
            }
        });

        RotNum4.setBackground(new java.awt.Color(51, 51, 51));
        RotNum4.setForeground(new java.awt.Color(255, 255, 0));
        RotNum4.setText("0");
        RotNum4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum4ActionPerformed(evt);
            }
        });

        Step3.setBackground(new java.awt.Color(102, 102, 102));
        Step3.setForeground(new java.awt.Color(255, 255, 255));
        Step3.setMaximumRowCount(5);
        Step3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16" }));
        Step3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Step3ActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(51, 51, 51));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 51));
        jLabel9.setText("Steps:");

        jLabel10.setBackground(new java.awt.Color(51, 51, 51));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 0));
        jLabel10.setText("Events:");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Euclidean Beat Editor");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(Step3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Event3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rotate3, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(Step4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Event4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rotate4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(Step5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Event5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rotate5, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Step2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Event2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Step1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Event1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Rotate1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(Rotate2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RotNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Step1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(Event1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(Rotate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotNum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Step2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(Event2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(Rotate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotNum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(Step3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(Event3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(Rotate3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotNum3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(Step4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(Event4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(Rotate4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotNum4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(Step5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(Event5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(Rotate5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RotNum5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(51, 51, 51));
        jPanel6.setPreferredSize(new java.awt.Dimension(500, 500));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(java.awt.Color.darkGray);

        OpenPRE.setText("Open Piano Roll Editor");
        OpenPRE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OpenPREMouseClicked(evt);
            }
        });
        OpenPRE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenPREActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piano", "Sine Wave", "Drum", "Clean Gt" }));
        jComboBox1.setSelectedIndex(1);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel37.setForeground(new java.awt.Color(255, 255, 0));
        jLabel37.setText("Channel: ");

        jLabel38.setForeground(new java.awt.Color(255, 255, 0));
        jLabel38.setText("1)");

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(60, 0, 120, 1));
        jSpinner2.setBorder(null);

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(60, 0, 120, 1));
        jSpinner3.setBorder(null);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piano", "Sine Wave", "Drum", "Clean Gt" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel39.setForeground(new java.awt.Color(255, 255, 0));
        jLabel39.setText("2)");

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(60, 0, 120, 1));
        jSpinner4.setBorder(null);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piano", "Sine Wave", "Drum", "Clean Gt" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel40.setForeground(new java.awt.Color(255, 255, 0));
        jLabel40.setText("3)");

        jSpinner5.setModel(new javax.swing.SpinnerNumberModel(60, 0, 120, 1));
        jSpinner5.setBorder(null);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piano", "Sine Wave", "Drum", "Clean Gt" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel41.setForeground(new java.awt.Color(255, 255, 0));
        jLabel41.setText("4)");

        jSpinner6.setModel(new javax.swing.SpinnerNumberModel(60, 0, 120, 1));
        jSpinner6.setBorder(null);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piano", "Sine Wave", "Drum", "Clean Gt" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        jLabel42.setForeground(new java.awt.Color(255, 255, 0));
        jLabel42.setText("5)");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OpenPRE, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(OpenPRE)
                .addContainerGap())
        );

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 0));
        jLabel19.setText("Loop Duration");

        jPanel8.setBackground(java.awt.Color.darkGray);

        jPanel9.setBackground(java.awt.Color.darkGray);
        jPanel9.setForeground(new java.awt.Color(255, 255, 0));
        jPanel9.setPreferredSize(new java.awt.Dimension(75, 0));
        jPanel9.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jPanel9ComponentAdded(evt);
            }
        });

        Rotate7.setBackground(new java.awt.Color(0, 0, 0));
        Rotate7.setForeground(new java.awt.Color(255, 255, 0));
        Rotate7.setMaximum(90);
        Rotate7.setMinimum(-90);
        Rotate7.setPaintLabels(true);
        Rotate7.setPaintTicks(true);
        Rotate7.setValue(0);
        Rotate7.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate7StateChanged(evt);
            }
        });

        RotNum7.setBackground(new java.awt.Color(51, 51, 51));
        RotNum7.setForeground(new java.awt.Color(255, 255, 0));
        RotNum7.setText("0");
        RotNum7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum7ActionPerformed(evt);
            }
        });

        Shape1.setBackground(new java.awt.Color(102, 102, 102));
        Shape1.setForeground(new java.awt.Color(255, 255, 255));
        Shape1.setMaximumRowCount(5);
        Shape1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "2-gon", "3-gon", "4-gon", "5-gon", "6-gon", "7-gon", "8-gon", "9-gon", "10-gon", "11-gon", "12-gon", "13-gon", "14-gon", "15-gon", "16-gon", "6-in-30", "7a-in-30", "7b-in-30", "7c-in-30", "7d-in-30", "7e-in-30", "7f-in-30", "7g-in-30", "7h-in-30", "7i-in-30", "7j-in-30", " " }));
        Shape1.setToolTipText("");
        Shape1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Shape1ActionPerformed(evt);
            }
        });

        jLabel50.setBackground(new java.awt.Color(51, 51, 51));
        jLabel50.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 51));
        jLabel50.setText("Shape:");

        jLabel52.setBackground(new java.awt.Color(51, 51, 51));
        jLabel52.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 0));
        jLabel52.setText("Channel:");

        jLabel54.setBackground(new java.awt.Color(51, 51, 51));
        jLabel54.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 255, 0));
        jLabel54.setText("Rotation:");

        ChannelSelection1.setBackground(new java.awt.Color(102, 102, 102));
        ChannelSelection1.setForeground(new java.awt.Color(255, 255, 255));
        ChannelSelection1.setMaximumRowCount(8);
        ChannelSelection1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        ChannelSelection1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChannelSelection1ActionPerformed(evt);
            }
        });

        jLabel58.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setText("Perfectly Balanced Music Generator");

        RotNum8.setBackground(new java.awt.Color(51, 51, 51));
        RotNum8.setForeground(new java.awt.Color(255, 255, 0));
        RotNum8.setText("0");
        RotNum8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum8ActionPerformed(evt);
            }
        });

        Rotate8.setBackground(new java.awt.Color(0, 0, 0));
        Rotate8.setForeground(new java.awt.Color(255, 255, 0));
        Rotate8.setMaximum(90);
        Rotate8.setMinimum(-90);
        Rotate8.setPaintLabels(true);
        Rotate8.setPaintTicks(true);
        Rotate8.setValue(0);
        Rotate8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate8StateChanged(evt);
            }
        });

        jLabel55.setBackground(new java.awt.Color(51, 51, 51));
        jLabel55.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 255, 0));
        jLabel55.setText("Rotation:");

        ChannelSelection2.setBackground(new java.awt.Color(102, 102, 102));
        ChannelSelection2.setForeground(new java.awt.Color(255, 255, 255));
        ChannelSelection2.setMaximumRowCount(8);
        ChannelSelection2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        ChannelSelection2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChannelSelection2ActionPerformed(evt);
            }
        });

        jLabel53.setBackground(new java.awt.Color(51, 51, 51));
        jLabel53.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 0));
        jLabel53.setText("Channel:");

        Shape2.setBackground(new java.awt.Color(102, 102, 102));
        Shape2.setForeground(new java.awt.Color(255, 255, 255));
        Shape2.setMaximumRowCount(5);
        Shape2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "2-gon", "3-gon", "4-gon", "5-gon", "6-gon", "7-gon", "8-gon", "9-gon", "10-gon", "11-gon", "12-gon", "13-gon", "14-gon", "15-gon", "16-gon" }));
        Shape2.setToolTipText("");
        Shape2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Shape2ActionPerformed(evt);
            }
        });

        jLabel51.setBackground(new java.awt.Color(51, 51, 51));
        jLabel51.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 51));
        jLabel51.setText("Shape:");

        Shape3.setBackground(new java.awt.Color(102, 102, 102));
        Shape3.setForeground(new java.awt.Color(255, 255, 255));
        Shape3.setMaximumRowCount(5);
        Shape3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "2-gon", "3-gon", "4-gon", "5-gon", "6-gon", "7-gon", "8-gon", "9-gon", "10-gon", "11-gon", "12-gon", "13-gon", "14-gon", "15-gon", "16-gon" }));
        Shape3.setToolTipText("");
        Shape3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Shape3ActionPerformed(evt);
            }
        });

        jLabel56.setBackground(new java.awt.Color(51, 51, 51));
        jLabel56.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 255, 51));
        jLabel56.setText("Shape:");

        jLabel57.setBackground(new java.awt.Color(51, 51, 51));
        jLabel57.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(255, 255, 0));
        jLabel57.setText("Channel:");

        ChannelSelection3.setBackground(new java.awt.Color(102, 102, 102));
        ChannelSelection3.setForeground(new java.awt.Color(255, 255, 255));
        ChannelSelection3.setMaximumRowCount(8);
        ChannelSelection3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        ChannelSelection3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChannelSelection3ActionPerformed(evt);
            }
        });

        jLabel59.setBackground(new java.awt.Color(51, 51, 51));
        jLabel59.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(255, 255, 0));
        jLabel59.setText("Rotation:");

        Rotate9.setBackground(new java.awt.Color(0, 0, 0));
        Rotate9.setForeground(new java.awt.Color(255, 255, 0));
        Rotate9.setMaximum(90);
        Rotate9.setMinimum(-90);
        Rotate9.setPaintLabels(true);
        Rotate9.setPaintTicks(true);
        Rotate9.setValue(0);
        Rotate9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate9StateChanged(evt);
            }
        });

        RotNum9.setBackground(new java.awt.Color(51, 51, 51));
        RotNum9.setForeground(new java.awt.Color(255, 255, 0));
        RotNum9.setText("0");
        RotNum9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum9ActionPerformed(evt);
            }
        });

        Shape4.setBackground(new java.awt.Color(102, 102, 102));
        Shape4.setForeground(new java.awt.Color(255, 255, 255));
        Shape4.setMaximumRowCount(5);
        Shape4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "2-gon", "3-gon", "4-gon", "5-gon", "6-gon", "7-gon", "8-gon", "9-gon", "10-gon", "11-gon", "12-gon", "13-gon", "14-gon", "15-gon", "16-gon" }));
        Shape4.setToolTipText("");
        Shape4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Shape4ActionPerformed(evt);
            }
        });

        jLabel60.setBackground(new java.awt.Color(51, 51, 51));
        jLabel60.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(255, 255, 51));
        jLabel60.setText("Shape:");

        jLabel61.setBackground(new java.awt.Color(51, 51, 51));
        jLabel61.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(255, 255, 0));
        jLabel61.setText("Channel:");

        ChannelSelection4.setBackground(new java.awt.Color(102, 102, 102));
        ChannelSelection4.setForeground(new java.awt.Color(255, 255, 255));
        ChannelSelection4.setMaximumRowCount(8);
        ChannelSelection4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        ChannelSelection4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChannelSelection4ActionPerformed(evt);
            }
        });

        jLabel62.setBackground(new java.awt.Color(51, 51, 51));
        jLabel62.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(255, 255, 0));
        jLabel62.setText("Rotation:");

        Rotate10.setBackground(new java.awt.Color(0, 0, 0));
        Rotate10.setForeground(new java.awt.Color(255, 255, 0));
        Rotate10.setMaximum(90);
        Rotate10.setMinimum(-90);
        Rotate10.setPaintLabels(true);
        Rotate10.setPaintTicks(true);
        Rotate10.setValue(0);
        Rotate10.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate10StateChanged(evt);
            }
        });

        RotNum10.setBackground(new java.awt.Color(51, 51, 51));
        RotNum10.setForeground(new java.awt.Color(255, 255, 0));
        RotNum10.setText("0");
        RotNum10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum10ActionPerformed(evt);
            }
        });

        Shape6.setBackground(new java.awt.Color(102, 102, 102));
        Shape6.setForeground(new java.awt.Color(255, 255, 255));
        Shape6.setMaximumRowCount(5);
        Shape6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "2-gon", "3-gon", "4-gon", "5-gon", "6-gon", "7-gon", "8-gon", "9-gon", "10-gon", "11-gon", "12-gon", "13-gon", "14-gon", "15-gon", "16-gon" }));
        Shape6.setToolTipText("");
        Shape6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Shape6ActionPerformed(evt);
            }
        });

        jLabel66.setBackground(new java.awt.Color(51, 51, 51));
        jLabel66.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(255, 255, 51));
        jLabel66.setText("Shape:");

        jLabel67.setBackground(new java.awt.Color(51, 51, 51));
        jLabel67.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(255, 255, 0));
        jLabel67.setText("Channel:");

        ChannelSelection6.setBackground(new java.awt.Color(102, 102, 102));
        ChannelSelection6.setForeground(new java.awt.Color(255, 255, 255));
        ChannelSelection6.setMaximumRowCount(8);
        ChannelSelection6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        ChannelSelection6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChannelSelection6ActionPerformed(evt);
            }
        });

        jLabel68.setBackground(new java.awt.Color(51, 51, 51));
        jLabel68.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(255, 255, 0));
        jLabel68.setText("Rotation:");

        Rotate12.setBackground(new java.awt.Color(0, 0, 0));
        Rotate12.setForeground(new java.awt.Color(255, 255, 0));
        Rotate12.setMaximum(90);
        Rotate12.setMinimum(-90);
        Rotate12.setPaintLabels(true);
        Rotate12.setPaintTicks(true);
        Rotate12.setValue(0);
        Rotate12.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Rotate12StateChanged(evt);
            }
        });

        RotNum12.setBackground(new java.awt.Color(51, 51, 51));
        RotNum12.setForeground(new java.awt.Color(255, 255, 0));
        RotNum12.setText("0");
        RotNum12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotNum12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Shape1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChannelSelection1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rotate7, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RotNum7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel51)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Shape2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel53)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChannelSelection2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rotate8, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RotNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel56)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Shape3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel57)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChannelSelection3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel59)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rotate9, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RotNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel60)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Shape4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel61)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChannelSelection4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rotate10, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RotNum10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel66)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Shape6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel67)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChannelSelection6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Rotate12, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RotNum12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Rotate12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel58)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Shape1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel52)
                                .addComponent(ChannelSelection1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel54)
                                .addComponent(Rotate7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(RotNum7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel50))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel51)
                            .addComponent(Shape2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel53)
                            .addComponent(ChannelSelection2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel55)
                            .addComponent(Rotate8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RotNum8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel56)
                            .addComponent(Shape3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel57)
                            .addComponent(ChannelSelection3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel59)
                            .addComponent(Rotate9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RotNum9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel60)
                            .addComponent(Shape4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel61)
                            .addComponent(ChannelSelection4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel62)
                            .addComponent(Rotate10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RotNum10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel66)
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Shape6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel67))
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(ChannelSelection6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel68))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RotNum12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 220, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(83, 83, 83)
                                        .addComponent(jLabel4))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton37, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton39, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton43, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton44, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton45, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton46, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton47, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton48, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton49, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton50, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton51, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton52, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton53, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton54, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton55, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton56, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton57, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton58, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton59, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton60, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton61, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton62, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton63, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton64, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton65, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton66, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton67, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton68, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton69, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton70, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton71, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton72, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel5)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PlayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel19)
                                .addGap(81, 81, 81)))
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(13, 13, 13)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(PlayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel19)
                            .addGap(11, 11, 11)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton37, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton39, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton42, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton43, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton44, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton45, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton46, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton47, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton48, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton49, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton50, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton51, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton52, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton53, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton54, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton55, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton56, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton57, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton58, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton59, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton60, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton61, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton62, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton63, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton64, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton65, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton66, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton67, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton68, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton69, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton70, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton71, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton72, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 750));

        jMenuBar1.setBackground(new java.awt.Color(51, 51, 51));
        jMenuBar1.setBorder(null);
        jMenuBar1.setForeground(new java.awt.Color(51, 51, 51));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel5ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jPanel5ComponentAdded

    }//GEN-LAST:event_jPanel5ComponentAdded

    private void Step3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Step3ActionPerformed
        String stepNo = (String)Step3.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();
        drawCirc3(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup3(home);
    }//GEN-LAST:event_Step3ActionPerformed

    private void RotNum4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum4ActionPerformed
        String rotation  = RotNum4.getText();
        int rotationAsInt = Integer.parseInt(rotation);
        Rotate4.setValue(rotationAsInt);
    }//GEN-LAST:event_RotNum4ActionPerformed

    private void Event2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Event2ActionPerformed
        String stepNo = (String)Step2.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();
        Integer rotate = Rotate2.getValue();
        drawCirc2(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup(home);
    }//GEN-LAST:event_Event2ActionPerformed

    private void Rotate4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate4StateChanged
        String stepNo = (String)Step4.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();

        StringBuilder sb = new StringBuilder();
        sb.append("");
        sb.append(Rotate4.getValue());
        String str = sb.toString();

        RotNum4.setText(str);
        drawCirc4(tab, stepNo);
    }//GEN-LAST:event_Rotate4StateChanged

    private void Event1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Event1ActionPerformed
        String stepNo = (String)Step1.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();
        drawCirc1(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup(home);
    }//GEN-LAST:event_Event1ActionPerformed

    private void RotNum3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum3ActionPerformed
        String rotation  = RotNum3.getText();
        int rotationAsInt = Integer.parseInt(rotation);
        Rotate3.setValue(rotationAsInt);
    }//GEN-LAST:event_RotNum3ActionPerformed

    private void Rotate3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate3StateChanged
        String stepNo = (String)Step3.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();

        StringBuilder sb = new StringBuilder();
        sb.append("");
        sb.append(Rotate3.getValue());
        String str = sb.toString();

        RotNum3.setText(str);
        drawCirc3(tab, stepNo);
    }//GEN-LAST:event_Rotate3StateChanged

    private void RotNum2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum2ActionPerformed
        String rotation  = RotNum2.getText();
        int rotationAsInt = Integer.parseInt(rotation);
        Rotate2.setValue(rotationAsInt);
    }//GEN-LAST:event_RotNum2ActionPerformed

    private void Step2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Step2ActionPerformed
        String stepNo = (String)Step2.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();
        drawCirc2(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup2(home);
    }//GEN-LAST:event_Step2ActionPerformed

    private void Rotate2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate2StateChanged
        String stepNo = (String)Step2.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();

        StringBuilder sb = new StringBuilder();
        sb.append("");
        sb.append(Rotate2.getValue());
        String str = sb.toString();

        RotNum2.setText(str);
        drawCirc2(tab, stepNo);
    }//GEN-LAST:event_Rotate2StateChanged

    private void Step1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Step1ActionPerformed
        String stepNo = (String)Step1.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();
        Integer rotate = Rotate1.getValue();
        drawCirc1(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup(home);
    }//GEN-LAST:event_Step1ActionPerformed

    private void RotNum1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum1ActionPerformed
        String rotation  = RotNum1.getText();
        int rotationAsInt = Integer.parseInt(rotation);
        Rotate1.setValue(rotationAsInt);
    }//GEN-LAST:event_RotNum1ActionPerformed

    private void Rotate1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate1StateChanged
        String stepNo = (String)Step1.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();

        StringBuilder sb = new StringBuilder();
        sb.append("");
        sb.append(Rotate1.getValue());
        String str = sb.toString();

        RotNum1.setText(str);
        drawCirc1(tab, stepNo);
    }//GEN-LAST:event_Rotate1StateChanged

    private void Event5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Event5ActionPerformed
        String stepNo = (String)Step5.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();
        Integer rotate = Rotate5.getValue();
        drawCirc5(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup(home);
    }//GEN-LAST:event_Event5ActionPerformed

    private void Step5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Step5ActionPerformed
        String stepNo = (String)Step5.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();
        drawCirc5(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup5(home);
    }//GEN-LAST:event_Step5ActionPerformed

    private void Event4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Event4ActionPerformed
        String stepNo = (String)Step4.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();
        Integer rotate = Rotate4.getValue();
        drawCirc4(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup(home);
    }//GEN-LAST:event_Event4ActionPerformed

    private void Step4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Step4ActionPerformed
        String stepNo = (String)Step4.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();
        drawCirc4(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup4(home);
    }//GEN-LAST:event_Step4ActionPerformed

    private void Event3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Event3ActionPerformed
        String stepNo = (String)Step3.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();
        Integer rotate = Rotate3.getValue();
        drawCirc3(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup(home);
    }//GEN-LAST:event_Event3ActionPerformed

    private void RotNum5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum5ActionPerformed
        String rotation  = RotNum5.getText();
        int rotationAsInt = Integer.parseInt(rotation);
        Rotate5.setValue(rotationAsInt);
    }//GEN-LAST:event_RotNum5ActionPerformed

    private void Rotate5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate5StateChanged
        String stepNo = (String)Step5.getSelectedItem( );
        Graphics tab = jPanel3.getGraphics();

        StringBuilder sb = new StringBuilder();
        sb.append("");
        sb.append(Rotate5.getValue());
        String str = sb.toString();

        RotNum5.setText(str);
        drawCirc5(tab, stepNo);
    }//GEN-LAST:event_Rotate5StateChanged

    private void PlayButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlayButtonMousePressed
        //Graphics tab = jPanel3.getGraphics();
        //tab.setColor(Color.red);
        //tab.fillPolygon(new int [] {248, 252, 252, 248}, new int [] {250,250,200,200},4);
        try{
            PlayAction();
        } catch(Exception e){
            System.out.println("Ouchie, that wasn't meant to happen");
        }
        /*
        Clock clock = Clock.systemUTC();  

        Duration tickDuration = Duration.ofMillis(25000);
        Duration doubleTick = Duration.ofMillis(500);
        Clock clock1 = Clock.tick(clock, tickDuration);
        Clock clock2 = Clock.tick(clock, doubleTick);
        System.out.println("Clock : " + clock.millis());
        System.out.println("Clock1 : " + clock1.millis());
        System.out.println("Clock2 : " + clock2.millis());
        */
    }//GEN-LAST:event_PlayButtonMousePressed

    private void PlayAction() throws MidiUnavailableException, InterruptedException{   
        try{
            Synthesizer synth = MidiSystem.getSynthesizer();
            synth.open();

            //Ring 1
            Integer rotate1 = (Integer)Rotate1.getValue();
            String stepNo = (String)Step1.getSelectedItem();
            float stepAsInt = Integer.parseInt(stepNo);
            String eventNo = (String)Event1.getSelectedItem( );
            float eventAsInt = Integer.parseInt(eventNo);
            float change = stepAsInt/eventAsInt;
            List<Integer> events = new ArrayList<Integer>();
            events.add(0);
            
            float current = 0;
            for(Integer i = 0; i<eventAsInt-1; i++){
                current = current + change;
                Integer a = Math.round(current);
                events.add(a);                
            }

            //Ring 2
            Integer rotate2 = (Integer)Rotate2.getValue();
            String stepNo2 = (String)Step2.getSelectedItem();
            float stepAsInt2 = Integer.parseInt(stepNo2);
            String eventNo2 = (String)Event2.getSelectedItem( );
            float eventAsInt2 = Integer.parseInt(eventNo2);
            float change2 = stepAsInt2/eventAsInt2;
            List<Integer> events2 = new ArrayList<Integer>();
            events2.add(0);     
                      
            float current2 = 0;
            for(Integer i = 0; i<eventAsInt2-1; i++){
                current2 = current2 + change2;
                Integer a2 = Math.round(current2);
                events2.add(a2);                
            }
            
            //Ring 3
            Integer rotate3 = (Integer)Rotate3.getValue();
            String stepNo3 = (String)Step3.getSelectedItem();
            float stepAsInt3 = Integer.parseInt(stepNo3);
            String eventNo3 = (String)Event3.getSelectedItem( );
            float eventAsInt3 = Integer.parseInt(eventNo3);
            float change3 = stepAsInt3/eventAsInt3;
            List<Integer> events3 = new ArrayList<Integer>();
            events3.add(0);
                      
            float current3 = 0;
            for(Integer i = 0; i<eventAsInt3-1; i++){
                current3 = current3 + change3;
                Integer a3 = Math.round(current3);
                events3.add(a3);                
            }
            
            //Ring 4
            Integer rotate4 = (Integer)Rotate4.getValue();
            String stepNo4 = (String)Step4.getSelectedItem();
            float stepAsInt4 = Integer.parseInt(stepNo4);
            String eventNo4 = (String)Event4.getSelectedItem( );
            float eventAsInt4 = Integer.parseInt(eventNo4);
            float change4 = stepAsInt4/eventAsInt4;
            List<Integer> events4 = new ArrayList<Integer>();
            events4.add(0);
                      
            float current4 = 0;
            for(Integer i = 0; i<eventAsInt4-1; i++){
                current4 = current4 + change4;
                Integer a4 = Math.round(current4);
                events4.add(a4);                
            }
            
            //Ring 5
            Integer rotate5 = (Integer)Rotate5.getValue();
            String stepNo5 = (String)Step5.getSelectedItem();
            float stepAsInt5 = Integer.parseInt(stepNo5);
            String eventNo5 = (String)Event5.getSelectedItem( );
            float eventAsInt5 = Integer.parseInt(eventNo5);
            float change5 = stepAsInt5/eventAsInt5;
            List<Integer> events5 = new ArrayList<Integer>();
            events5.add(0);
                      
            float current5 = 0;
            for(Integer i = 0; i<eventAsInt5-1; i++){
                current5 = current5 + change5;
                Integer a5 = Math.round(current5);
                events5.add(a5);                
            }

            MidiChannel[] channel = synth.getChannels();
            channel[0].programChange(1024,80);
            channel[1].programChange(1024,80);
            channel[2].programChange(1024,80);
            channel[3].programChange(1024,80);
            channel[4].programChange(1024,80);
            
            channel[6].programChange(0,0);
            
            channel[7].programChange(1024, 80);
            /*
            channel[1].programChange(0,27);
            channel[2].programChange(0,73);
            channel[3].programChange(128,57);
            channel[4].programChange(256,127);
            */
            float tickNo = 12000;
            
            float tempSteps = 12000/stepAsInt;
            long steps = (long)tempSteps;
            
            float tempSteps2 = 12000/stepAsInt2;
            long steps2 = (long)tempSteps2;
            
            float tempSteps3 = 12000/stepAsInt3;
            long steps3 = (long)tempSteps3;
            
            float tempSteps4 = 12000/stepAsInt4;
            long steps4 = (long)tempSteps4;
            
            float tempSteps5 = 12000/stepAsInt5;
            long steps5 = (long)tempSteps5;
                       
            Sequence total = new Sequence(30, 100, 2);
            

            Track oneTrack = total.createTrack();
            
            ShortMessage onMsg = new ShortMessage(ShortMessage.NOTE_ON, 0, 60, 90);
            ShortMessage offMsg = new ShortMessage(ShortMessage.NOTE_OFF, 0, 60, 90);
            int duration = 200;
            
            int temp = 0;
            for(int counter = 0; counter <= steps; counter++){ 
                
                if(counter == events.get(temp)){
                    Long tickTemp = round(rotate1*33.3333333);
                    Long tickPos = (steps*counter + tickTemp + 12000)% 12000;
                    //String ticker = Long.toString(tickPos);
                    MidiEvent noteOn = new MidiEvent(onMsg, tickPos + 50);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + tickPos + 50);

                    oneTrack.add(noteOn); 
                    oneTrack.add(noteOff);
                    temp = temp + 1;
                    if(temp >= events.size()){
                        temp = 0;
                    }                    
                }

            }
            
            Track twoTrack = total.createTrack();
            
            onMsg = new ShortMessage(ShortMessage.NOTE_ON, 1, 61, 90);
            offMsg = new ShortMessage(ShortMessage.NOTE_OFF, 1, 61, 90);
            
            temp = 0;
            for(int counter = 0; counter <= steps2; counter++){ 
                if(counter == events2.get(temp)){
                    Long tickTemp2 = round(rotate2*33.3333333);
                    Long tickPos2 = (steps2*counter + tickTemp2 + 12000)% 12000;
                    //String ticker2 = Long.toString(tickPos2);
                    MidiEvent noteOn = new MidiEvent(onMsg, tickPos2 + 50);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + tickPos2 + 50);
                    twoTrack.add(noteOn); 
                    twoTrack.add(noteOff);
                    temp = temp + 1;
                    if(temp >= events2.size()){
                        temp = 0;
                    }                    
                }

            }
            
            Track threeTrack = total.createTrack();
            
            onMsg = new ShortMessage(ShortMessage.NOTE_ON, 2, 62, 90);
            offMsg = new ShortMessage(ShortMessage.NOTE_OFF, 2, 62, 90);
            
            temp = 0;
            for(int counter = 0; counter <= steps3; counter++){ 
                if(counter == events3.get(temp)){
                    Long tickTemp3 = round(rotate3*33.3333333);
                    Long tickPos3 = (steps3*counter + tickTemp3 + 12000)% 12000;
                    //String ticker3 = Long.toString(tickPos3);
                    MidiEvent noteOn = new MidiEvent(onMsg, tickPos3 + 50);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + tickPos3 + 50);
                    threeTrack.add(noteOn); 
                    threeTrack.add(noteOff);
                    temp = temp + 1;
                    if(temp >= events3.size()){
                        temp = 0;
                    }                    
                }

            }
            
            Track fourTrack = total.createTrack();
            
            onMsg = new ShortMessage(ShortMessage.NOTE_ON, 3, 63, 90);
            offMsg = new ShortMessage(ShortMessage.NOTE_OFF, 3, 63, 90);
            
            temp = 0;
            for(int counter = 0; counter <= steps4; counter++){ 
                if(counter == events4.get(temp)){
                    Long tickTemp4 = round(rotate4*33.3333333);
                    Long tickPos4 = (steps4*counter + tickTemp4 + 12000)% 12000;
                    //String ticker4 = Long.toString(tickPos4);
                    MidiEvent noteOn = new MidiEvent(onMsg, tickPos4 + 50);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + tickPos4 + 50);
                    fourTrack.add(noteOn); 
                    fourTrack.add(noteOff);
                    temp = temp + 1;
                    if(temp >= events4.size()){
                        temp = 0;
                    }                    
                }

            }
            
            Track fiveTrack = total.createTrack();
            
            onMsg = new ShortMessage(ShortMessage.NOTE_ON, 4, 64, 90);
            offMsg = new ShortMessage(ShortMessage.NOTE_OFF, 4, 64, 90);
            
            temp = 0;
            for(int counter = 0; counter <= steps5; counter++){ 
                if(counter == events5.get(temp)){
                    Long tickTemp5 = round(rotate5*33.3333333);
                    Long tickPos5 = (steps5*counter + tickTemp5 + 12000)% 12000;
                    //String ticker5 = Long.toString(tickPos5);
                    MidiEvent noteOn = new MidiEvent(onMsg, tickPos5 + 50);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + tickPos5 + 50);
                    fiveTrack.add(noteOn); 
                    fiveTrack.add(noteOff);
                    temp = temp + 1;
                    if(temp >= events5.size()){
                        temp = 0;
                    }                    
                }

            }
            
            ///////////////////////////////////////////////////
            Track Shape1Track = total.createTrack();
            
            int channel1 = ChannelSelection1.getSelectedIndex();
            channel1 = channel1 + 7;
            
            onMsg = new ShortMessage(ShortMessage.NOTE_ON, channel1, 64, 90);
            offMsg = new ShortMessage(ShortMessage.NOTE_OFF, channel1, 64, 90);

            //Shape 1
            int len1 = Shape1Points.size();
            int rot = (Integer)Rotate7.getValue();
            
            for(int i = 0; i<len1; i++){
                if (i%2 == 0){
                    double ang = angleBetweenCoordinates(Shape1Points.get(i),Shape1Points.get(i+1));
                    double startPoint = ((ang/360 + rot) *12000)%12000 + 50;
                    long longStartPoint = (long)startPoint;
                    
                    MidiEvent noteOn = new MidiEvent(onMsg, longStartPoint);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + longStartPoint);
                    
                    Shape1Track.add(noteOn);
                    Shape1Track.add(noteOff);
                }
            }
            
            //shape2
            Track Shape2Track = total.createTrack();
            
            int channel2 = ChannelSelection2.getSelectedIndex();
            channel2 = channel2 + 7;
            
            onMsg = new ShortMessage(ShortMessage.NOTE_ON, channel2, 64, 90);
            offMsg = new ShortMessage(ShortMessage.NOTE_OFF, channel2, 64, 90);

            //Shape 2
            int len2 = Shape2Points.size();
            int rot2 = (Integer)Rotate8.getValue();
            
            for(int i = 0; i<len2; i++){
                if (i%2 == 0){
                    double ang2 = angleBetweenCoordinates(Shape2Points.get(i),Shape2Points.get(i+1));
                    double startPoint = ((ang2/360 + rot2) *12000)%12000 + 50;
                    long longStartPoint = (long)startPoint;
                    
                    MidiEvent noteOn = new MidiEvent(onMsg, longStartPoint);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + longStartPoint);
                    
                    Shape2Track.add(noteOn);
                    Shape2Track.add(noteOff);
                }
            }
            
            //shape3
            Track Shape3Track = total.createTrack();
            
            int channel3 = ChannelSelection3.getSelectedIndex();
            channel3 = channel3 + 7;
            
            onMsg = new ShortMessage(ShortMessage.NOTE_ON, channel3, 64, 90);
            offMsg = new ShortMessage(ShortMessage.NOTE_OFF, channel3, 64, 90);

            //Shape 3
            int len3 = Shape3Points.size();
            int rot3 = (Integer)Rotate9.getValue();
            
            for(int i = 0; i<len3; i++){
                if (i%2 == 0){
                    double ang3 = angleBetweenCoordinates(Shape3Points.get(i),Shape3Points.get(i+1));
                    double startPoint = ((ang3/360 + rot3) *12000)%12000 + 50;
                    long longStartPoint = (long)startPoint;
                    
                    MidiEvent noteOn = new MidiEvent(onMsg, longStartPoint);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + longStartPoint);
                    
                    Shape3Track.add(noteOn);
                    Shape3Track.add(noteOff);
                }
            }
            
            //shape4
            Track Shape4Track = total.createTrack();
            
            int channel4 = ChannelSelection4.getSelectedIndex();
            channel4 = channel4 + 7;
            
            onMsg = new ShortMessage(ShortMessage.NOTE_ON, channel4, 64, 90);
            offMsg = new ShortMessage(ShortMessage.NOTE_OFF, channel4, 64, 90);

            //Shape 4
            int len4 = Shape4Points.size();
            int rot4 = (Integer)Rotate10.getValue();
            
            for(int i = 0; i<len4; i++){
                if (i%2 == 0){
                    double ang4 = angleBetweenCoordinates(Shape4Points.get(i),Shape4Points.get(i+1));
                    double startPoint = ((ang4/360 + rot4) *12000)%12000 + 50;
                    long longStartPoint = (long)startPoint;
                    
                    MidiEvent noteOn = new MidiEvent(onMsg, longStartPoint);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + longStartPoint);
                    
                    Shape4Track.add(noteOn);
                    Shape4Track.add(noteOff);
                }
            }
            
            //shape5
            Track Shape5Track = total.createTrack();
            
            int channel5 = ChannelSelection5.getSelectedIndex();
            channel5 = channel5 + 7;
            
            onMsg = new ShortMessage(ShortMessage.NOTE_ON, channel5, 64, 90);
            offMsg = new ShortMessage(ShortMessage.NOTE_OFF, channel5, 64, 90);

            //Shape 5
            int len5 = Shape5Points.size();
            int rot5 = (Integer)Rotate11.getValue();
            
            for(int i = 0; i<len5; i++){
                if (i%2 == 0){
                    double ang5 = angleBetweenCoordinates(Shape5Points.get(i),Shape5Points.get(i+1));
                    double startPoint = ((ang5/360 + rot5) *12000)%12000 + 50;
                    long longStartPoint = (long)startPoint;
                    
                    MidiEvent noteOn = new MidiEvent(onMsg, longStartPoint);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + longStartPoint);
                    
                    Shape5Track.add(noteOn);
                    Shape5Track.add(noteOff);
                }
            }
            
            ///////////////////////////////////////////////////
            
            Track userOne = total.createTrack();
            //ShortMessage(NoteOn, channel, noteNumber (60 is middle C), velocity
            
            
            int tracksize = trackOne.size();
            for(int i = 1; i <= tracksize; i++){
                if(i%3 == 0){
                    int start = trackOne.get(i-3);
                    int end = trackOne.get(i-2);
                    int note = trackOne.get(i-1);
                   
                    int width = end - start;
                    if(width <0){
                        width = -1*width;
                        temp = start;
                        start = end;
                        end = temp;
                    }
                    
                    onMsg = new ShortMessage(ShortMessage.NOTE_ON, 6, note, 90);
                    offMsg = new ShortMessage(ShortMessage.NOTE_OFF, 6, note, 90);
                    
                    MidiEvent noteOn = new MidiEvent(onMsg, start*10 + 50);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + end*10 + 50);
                    
                    userOne.add(noteOn);
                    userOne.add(noteOff);
                }
            }
            

            Track lengthHolder = total.createTrack();
            onMsg = new ShortMessage(ShortMessage.NOTE_ON, 5, 1, 10);
            offMsg = new ShortMessage(ShortMessage.NOTE_OFF, 5, 1, 10);
            MidiEvent noteOn = new MidiEvent(onMsg, 0);
            MidiEvent noteOff = new MidiEvent(offMsg, 12050);
            lengthHolder.add(noteOn); 
            lengthHolder.add(noteOff);
            
            System.out.println(total.getTracks());
            Sequencer player;
            player = MidiSystem.getSequencer(false);
            Transmitter t = player.getTransmitter();
            t.setReceiver(synth.getReceiver());
            player.open();
            player.setSequence(total);
            //player.setTrackMute(4, true);
            //player.getTrackMute(4);
            //System.out.println(player.getTickLength());
            player.setLoopStartPoint(50);
            player.setLoopEndPoint(12050);
            player.setLoopCount(2);
            player.start();
        } catch (Exception e){
            System.out.println("Now, this is catastrophic...");
            System.out.println(e);
        }
        
        
    }
    
    private void OpenPREMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpenPREMouseClicked
        jInternalFrame1.setVisible(true);
        //loadAction();

        //gtab.drawRect(xStart,yStart,10,10);
    }//GEN-LAST:event_OpenPREMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        //boolean on = jPopupMenu1.isShowing();
        //jPopupMenu1.setVisible(!on);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        
    }//GEN-LAST:event_jButton3MouseClicked

    private void jPanel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseReleased
        int xEnd = evt.getX();
        int yEnd = evt.getY();
        if(yStart <= 114){
            
        }
        else{
            System.out.println("WE ARE HERE");
            int yStartNorm = ((yStart-116)/29)*29;
            int yEndNorm = ((yStartNorm/29)+1)*29 - 2;
            
            //System.out.println("YSTARTNORM%%%%%%%%%%%%%%%%%%%%%%%%%%%%");
            System.out.println(yStartNorm);
            //System.out.println(xStart);
            //System.out.println(xEnd);
            
            if(yStartNorm == 0){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(68);
            }
            else if(yStartNorm == 29){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(67);
            }
            else if(yStartNorm == 58){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(66);
            }
            else if(yStartNorm == 87){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(65);
            }
            else if(yStartNorm == 116){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(64);
            }
            else if(yStartNorm == 145){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(63);
            }
            else if(yStartNorm == 174){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(62);
            }
            else if(yStartNorm == 203){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(61);
            }
            else if(yStartNorm == 232){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(60);
            }
            else if(yStartNorm == 261){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(59);
            }
            else if(yStartNorm == 290){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(58);
            }
            else if(yStartNorm == 319){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(57);
            }
            else if(yStartNorm == 348){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(56);
            }
            else if(yStartNorm == 377){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(55);
            }
            else if(yStartNorm == 406){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(54);
            }
            else if(yStartNorm == 435){
                trackOne.add(xStart);
                trackOne.add(xEnd);
                trackOne.add(53);
            }
            
            int[] xPoint = {xStart, xStart, xEnd, xEnd};
            int[] yPoint = {yStartNorm+116, yEndNorm+116, yEndNorm+116, yStartNorm+116};
            Graphics gtab = jPanel2.getGraphics();
            gtab.setColor(Color.DARK_GRAY);
            gtab.fillPolygon(xPoint, yPoint, 4);
            System.out.println("ALSO HERE");
            //gtab.drawRect(xStart,yStart,10,10);
            //int xDif = xEnd - xStart;
            //System.out.println(xDif);
            //gtab.fillRect(230,80,10,10);
        }

    }//GEN-LAST:event_jPanel2MouseReleased

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        xStart = evt.getX();
        yStart = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        //jPanel2.setBackground(Color.BLUE);
        int xPoint = evt.getX();
        int yPoint = evt.getY();
        int note = 68 - (yPoint - 116)/29;
        
        int tracksize = trackOne.size();
        for(int i = 1; i <= tracksize; i++){
            if(i%3 == 0){
                int start = trackOne.get(i-3);
                int end = trackOne.get(i-2);
                int tempNote = trackOne.get(i-1);
                int temp = 0;
                
                if(tempNote == note){
                    int width = end - start;
                    if(width <0){
                        width = -1*width;
                        temp = start;
                        start = end;
                        end = temp;
                    }
                    
                    if(xPoint >= start && xPoint <= end){
                        trackOne.remove(i-1);
                        trackOne.remove(i-2);
                        trackOne.remove(i-3);
                        //LoadButtonActionPerformed(ActionEvent(LoadButton.getComponents(),0,"",0));
                        break;
                    }
                }
            }
        }
        loadAction();
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jPanel2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseMoved
        int mouseX = evt.getX();
        int mouseY = evt.getY();
        //Graphics GxPos = jLabel20.getGraphics();
        String mouse = "Mouse X Position: ";
        mouse += Integer.toString(mouseX);
        mouse += " Mouse Y Position: ";
        mouse += Integer.toString(mouseY);
        //String xString = Integer.toString(mouseX);
        jLabel20.setText(mouse);
        

    }//GEN-LAST:event_jPanel2MouseMoved

    private void Xchrono(Graphics tab){
        tab.setColor(Color.darkGray);
        tab.fillOval(24, 0, 500, 500);
        tab.setColor(Color.BLACK);
        tab.fillOval(39,15,470,470);
        tab.setColor(Color.darkGray);
        tab.fillOval(44, 20, 460, 460);
    }
    
    private void ClosePREMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClosePREMouseClicked

        final Runnable one = new Runnable() {
            public void run() {
                jInternalFrame1.setVisible(false);
            }
        };

        final Runnable two = new Runnable() {
            public void run() {
                String stepNo = (String)Step5.getSelectedItem( );
                Graphics tab = jPanel3.getGraphics();
                drawCirc5(tab, stepNo);
                
                drawPerfectlyBalanced(1);
                //Graphics g = jPanel6.getGraphics();
                
                //Xchrono(g);
            }
        };

        Thread thr1 = new Thread() {
            public void run() {
                try {
                    SwingUtilities.invokeAndWait(one);
                    //System.out.print("done1");
                }
                catch (Exception e) {
                    e.printStackTrace();
                }
            }
        };

        Thread thr2 = new Thread() {
            public void run() {
                try {

                    Thread.sleep(50);
                    //System.out.println("I'm right here");
                    SwingUtilities.invokeAndWait(two);
                    //System.out.print("done2");
                }
                catch (Exception e) {
                    e.printStackTrace();
                }
            }
        };

        thr1.start();

        //System.out.println("THR2 starting here");
        thr2.start();
    }//GEN-LAST:event_ClosePREMouseClicked

    private void jPanel2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusGained
        Graphics gtab = jPanel2.getGraphics();
        int[] xPoint = {390, 390, 660, 660};
        int[] yPoint = {410, 450, 450, 420};
        gtab.setColor(Color.BLACK);
        gtab.fillPolygon(xPoint, yPoint, 4);
    }//GEN-LAST:event_jPanel2FocusGained

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown

    }//GEN-LAST:event_jPanel2ComponentShown

    private void jPanel4ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel4ComponentShown

    }//GEN-LAST:event_jPanel4ComponentShown

    private void jInternalFrame1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jInternalFrame1ComponentShown
        Graphics gtab = jPanel2.getGraphics();
        int[] xPoint = {390, 390, 660, 660};
        int[] yPoint = {410, 450, 450, 420};
        gtab.setColor(Color.BLACK);
        gtab.fillPolygon(xPoint, yPoint, 4);
        
        loadAction();
    }//GEN-LAST:event_jInternalFrame1ComponentShown

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        int mouseX = evt.getX();
        int mouseY = evt.getY();
        //Graphics GxPos = jLabel20.getGraphics();
        String mouse = "Mouse X Position: ";
        mouse += Integer.toString(mouseX);
        mouse += " Mouse Y Position: ";
        mouse += Integer.toString(mouseY);
        //String xString = Integer.toString(mouseX);
        jLabel20.setText(mouse);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void loadAction(){
        jPanel2.show();
        
        Graphics gtab = jPanel2.getGraphics();
        int[] xPoint = {0, 0, 1200, 1200};
        //nt[] yPoint = {56, 58, 58, 56};
        
        //gtab.fillPolygon(xPoint, yPoint, 4);
        
        gtab.setColor(Color.DARK_GRAY);
        gtab.fillRect(0, 0, 1200, 114);
        
        gtab.setColor(Color.GRAY);
        gtab.fillRect(0, 114, 1200, 580);
        
        gtab.setColor(Color.BLACK);
        //y max = 580
        
        int[] ySubPoint1 = {21, 23, 23, 21};
        gtab.fillPolygon(xPoint, ySubPoint1, 4);
        
        int[] ySubPoint2 = {44, 46, 46, 44};
        gtab.fillPolygon(xPoint, ySubPoint2, 4);
        
        int[] ySubPoint3 = {67, 69, 69, 67};
        gtab.fillPolygon(xPoint, ySubPoint3, 4);
        
        int[] ySubPoint4 = {90, 92, 92, 90};
        gtab.fillPolygon(xPoint, ySubPoint4, 4);
        
        int[] yPoint1 = {114, 116, 116, 114};
        gtab.fillPolygon(xPoint, yPoint1, 4);
        
        int[] yDoubPoint1 = {143, 145, 145, 143};
        gtab.fillPolygon(xPoint, yDoubPoint1, 4);
        
        int[] yPoint2 = {172, 174, 174, 172};
        gtab.fillPolygon(xPoint, yPoint2, 4);
        
        int[] yDoubPoint2 = {201, 203, 203, 201};
        gtab.fillPolygon(xPoint, yDoubPoint2, 4);
        
        int[] yPoint3 = {230, 232, 232, 230};
        gtab.fillPolygon(xPoint, yPoint3, 4);
        
        int[] yDoubPoint3 = {259, 261, 261, 259};
        gtab.fillPolygon(xPoint, yDoubPoint3, 4);
        
        int[] yPoint4 = {288, 290, 290, 288};
        gtab.fillPolygon(xPoint, yPoint4, 4);
        
        int[] yDoubPoint4 = {317, 319, 319, 317};
        gtab.fillPolygon(xPoint, yDoubPoint4, 4);
        
        int[] yPoint5 = {346, 348, 348, 346};
        gtab.fillPolygon(xPoint, yPoint5, 4);
        
        int[] yDoubPoint5 = {375, 377, 377, 375};
        gtab.fillPolygon(xPoint, yDoubPoint5, 4);
        
        int[] yPoint6 = {404, 406, 406, 404};
        gtab.fillPolygon(xPoint, yPoint6, 4);
        
        int[] yDoubPoint6 = {433, 435, 435, 433};
        gtab.fillPolygon(xPoint, yDoubPoint6, 4);
        
        int[] yPoint7 = {462, 464, 464, 462};
        gtab.fillPolygon(xPoint, yPoint7, 4);
        
        int[] yDoubPoint7 = {491, 493, 493, 491};
        gtab.fillPolygon(xPoint, yDoubPoint7, 4);
        
        int[] yPoint8 = {520, 522, 522, 520};
        gtab.fillPolygon(xPoint, yPoint8, 4);
        
        int[] yDoubPoint8 = {549, 551, 551, 549};
        gtab.fillPolygon(xPoint, yDoubPoint8, 4);
        
        int[] yPoint9 = {578, 580, 580, 578};
        gtab.fillPolygon(xPoint, yPoint9, 4);
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        gtab.setColor(Color.DARK_GRAY);
        int tracksize = trackOne.size();
            for(int i = 1; i <= tracksize; i++){
                if(i%3 == 0){
                    int start = trackOne.get(i-3);
                    int end = trackOne.get(i-2);
                    int note = trackOne.get(i-1);
                    int temp = 0;
                    
                    int y = (68-note)*29 +116;
                    int width = end - start;
                    if(width <0){
                        width = -1*width;
                        temp = start;
                        start = end;
                        end = temp;
                    }

                    
                    gtab.fillRect(start, y, width, 27);
                }
            }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        //Ring 1
        Integer rotate1 = (Integer)Rotate1.getValue();
        String stepNo = (String)Step1.getSelectedItem();
        float stepAsInt = Integer.parseInt(stepNo);
        String eventNo = (String)Event1.getSelectedItem( );
        float eventAsInt = Integer.parseInt(eventNo);
        float change = stepAsInt/eventAsInt;
        List<Integer> events = new ArrayList<Integer>();
        events.add(0);

        float current = 0;
        for(Integer i = 0; i<eventAsInt-1; i++){
            current = current + change;
            Integer a = Math.round(current);
            events.add(a);                
        }

        //Ring 2
        Integer rotate2 = (Integer)Rotate2.getValue();
        String stepNo2 = (String)Step2.getSelectedItem();
        float stepAsInt2 = Integer.parseInt(stepNo2);
        String eventNo2 = (String)Event2.getSelectedItem( );
        float eventAsInt2 = Integer.parseInt(eventNo2);
        float change2 = stepAsInt2/eventAsInt2;
        List<Integer> events2 = new ArrayList<Integer>();
        events2.add(0);     

        float current2 = 0;
        for(Integer i = 0; i<eventAsInt2-1; i++){
            current2 = current2 + change2;
            Integer a2 = Math.round(current2);
            events2.add(a2);                
        }

        //Ring 3
        Integer rotate3 = (Integer)Rotate3.getValue();
        String stepNo3 = (String)Step3.getSelectedItem();
        float stepAsInt3 = Integer.parseInt(stepNo3);
        String eventNo3 = (String)Event3.getSelectedItem( );
        float eventAsInt3 = Integer.parseInt(eventNo3);
        float change3 = stepAsInt3/eventAsInt3;
        List<Integer> events3 = new ArrayList<Integer>();
        events3.add(0);

        float current3 = 0;
        for(Integer i = 0; i<eventAsInt3-1; i++){
            current3 = current3 + change3;
            Integer a3 = Math.round(current3);
            events3.add(a3);                
        }

        //Ring 4
        Integer rotate4 = (Integer)Rotate4.getValue();
        String stepNo4 = (String)Step4.getSelectedItem();
        float stepAsInt4 = Integer.parseInt(stepNo4);
        String eventNo4 = (String)Event4.getSelectedItem( );
        float eventAsInt4 = Integer.parseInt(eventNo4);
        float change4 = stepAsInt4/eventAsInt4;
        List<Integer> events4 = new ArrayList<Integer>();
        events4.add(0);

        float current4 = 0;
        for(Integer i = 0; i<eventAsInt4-1; i++){
            current4 = current4 + change4;
            Integer a4 = Math.round(current4);
            events4.add(a4);                
        }

        //Ring 5
        Integer rotate5 = (Integer)Rotate5.getValue();
        String stepNo5 = (String)Step5.getSelectedItem();
        float stepAsInt5 = Integer.parseInt(stepNo5);
        String eventNo5 = (String)Event5.getSelectedItem( );
        float eventAsInt5 = Integer.parseInt(eventNo5);
        float change5 = stepAsInt5/eventAsInt5;
        List<Integer> events5 = new ArrayList<Integer>();
        events5.add(0);

        float current5 = 0;
        for(Integer i = 0; i<eventAsInt5-1; i++){
            current5 = current5 + change5;
            Integer a5 = Math.round(current5);
            events5.add(a5);                
        }

        //rotate by 180 is 6000 ticks
        //rotate by 1 is 33.33333 ticks
        
        float tempSteps = 12000/stepAsInt;
        long steps = (long)tempSteps;

        float tempSteps2 = 12000/stepAsInt2;
        long steps2 = (long)tempSteps2;

        float tempSteps3 = 12000/stepAsInt3;
        long steps3 = (long)tempSteps3;

        float tempSteps4 = 12000/stepAsInt4;
        long steps4 = (long)tempSteps4;

        float tempSteps5 = 12000/stepAsInt5;
        long steps5 = (long)tempSteps5;


        List<Long> event1Ticks = new ArrayList<Long>();
        int temp = 0;
        for(int counter = 0; counter <= steps; counter++){ 

            if(counter == events.get(temp)){
                
                Long tickTemp = round(rotate1*33.3333333);
                Long tickPos = ((steps*counter + tickTemp + 12000)% 12000)/10;
                String ticker = Long.toString(tickPos);
                event1Ticks.add(tickPos);
                //System.out.println("EVENTS 1 on tics: " + ticker);
                
                gtab.setColor(Color.YELLOW);
                int atickPos = Math.toIntExact(tickPos);
                int[] xNote = {atickPos, atickPos, atickPos+40, atickPos+40};
                int[] yNote = {0, 21, 21, 0};
                gtab.fillPolygon(xNote,yNote,4); 
                
                temp = temp + 1;
                if(temp >= events.size()){
                    temp = 0;
                }                    
            }
        }

        List<Long> event2Ticks = new ArrayList<Long>();
        temp = 0;
        for(int counter = 0; counter <= steps2; counter++){ 
            if(counter == events2.get(temp)){
                Long tickTemp2 = round(rotate2*33.3333333);
                Long tickPos2 = ((steps2*counter + tickTemp2 + 12000)% 12000)/10;
                String ticker2 = Long.toString(tickPos2);
                event2Ticks.add(tickPos2);
                //System.out.println("EVENTS 2 on tics: " + ticker2);
                
                gtab.setColor(Color.CYAN);
                int atickPos = Math.toIntExact(tickPos2);
                int[] xNote = {atickPos, atickPos, atickPos+40, atickPos+40};
                int[] yNote = {23, 44, 44, 23};
                gtab.fillPolygon(xNote,yNote,4);
                
                temp = temp + 1;
                if(temp >= events2.size()){
                    temp = 0;
                }                    
            }
        }

        List<Long> event3Ticks = new ArrayList<Long>();
        temp = 0;
        for(int counter = 0; counter <= steps3; counter++){ 
            if(counter == events3.get(temp)){
                Long tickTemp3 = round(rotate3*33.3333333);
                Long tickPos3 = ((steps3*counter + tickTemp3 + 12000)% 12000)/10;
                String ticker3 = Long.toString(tickPos3);
                event3Ticks.add(tickPos3);
                //System.out.println("EVENTS 3 on tics: " + ticker3);
                
                gtab.setColor(Color.GREEN);
                int atickPos = Math.toIntExact(tickPos3);
                int[] xNote = {atickPos, atickPos, atickPos+40, atickPos+40};
                int[] yNote = {46, 67, 67, 46};
                gtab.fillPolygon(xNote,yNote,4);
                
                temp = temp + 1;
                if(temp >= events3.size()){
                    temp = 0;
                }                    
            }

        }

        List<Long> event4Ticks = new ArrayList<Long>();
        temp = 0;
        for(int counter = 0; counter <= steps4; counter++){ 
            if(counter == events4.get(temp)){
                Long tickTemp4 = round(rotate4*33.3333333);
                Long tickPos4 = ((steps4*counter + tickTemp4 +12000)% 12000)/10;
                String ticker4 = Long.toString(tickPos4);
                event4Ticks.add(tickPos4);
                //System.out.println("EVENTS 4 on tics: " + ticker4);
                
                gtab.setColor(Color.RED);
                int atickPos = Math.toIntExact(tickPos4);
                int[] xNote = {atickPos, atickPos, atickPos+40, atickPos+40};
                int[] yNote = {69, 90, 90, 69};
                gtab.fillPolygon(xNote,yNote,4);
                
                temp = temp + 1;
                if(temp >= events4.size()){
                    temp = 0;
                }                    
            }
        }

        List<Long> event5Ticks = new ArrayList<Long>();
        temp = 0;
        for(int counter = 0; counter <= steps5; counter++){ 
            if(counter == events5.get(temp)){
                Long tickTemp5 = round(rotate5*33.3333333);
                Long tickPos5 = ((steps5*counter + tickTemp5 + 12000)% 12000)/10;
                String ticker5 = Long.toString(tickPos5);
                event5Ticks.add(tickPos5);
                //System.out.println("EVENTS 5 on tics: " + ticker5);
                
                gtab.setColor(Color.WHITE);
                int atickPos = Math.toIntExact(tickPos5);
                int[] xNote = {atickPos, atickPos, atickPos+40, atickPos+40};
                int[] yNote = {92, 113, 113, 92};
                gtab.fillPolygon(xNote,yNote,4);
                
                temp = temp + 1;
                if(temp >= events5.size()){
                    temp = 0;
                }                    
            }
        }
    }
    
    private void LoadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadButtonActionPerformed
        loadAction();
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
    }//GEN-LAST:event_LoadButtonActionPerformed

    private void jPanel2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel2KeyPressed
        // TODO add your handling code here:
        System.out.println("KEY PRESS EVENT");
        System.out.println(evt);
    }//GEN-LAST:event_jPanel2KeyPressed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered

    }//GEN-LAST:event_jPanel2MouseEntered

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void OpenPREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenPREActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OpenPREActionPerformed

    private void jPanel9ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jPanel9ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel9ComponentAdded

    private void ChannelSelection1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChannelSelection1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChannelSelection1ActionPerformed

    private void Shape1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Shape1ActionPerformed
        int sides = Shape1.getSelectedIndex();
        balancedRotate(1, sides);
    }//GEN-LAST:event_Shape1ActionPerformed

    private void balancedRotate(int Shape, int sideIndex){
        ArrayList<Double> tempOut = new ArrayList<>();
        Double[] OriginalPoints = {};
        
        switch (sideIndex) {
            case 0:
                return;
            case 1:
                OriginalPoints = sides1;
                break;
            case 2:
                OriginalPoints = sides2;
                break;
            case 3:
                OriginalPoints = sides3;
                break;
            case 4:
                OriginalPoints = sides4;
                break;
            case 5:
                OriginalPoints = sides5;
                break;
            case 6:
                OriginalPoints = sides6;
                break;
            case 7:
                OriginalPoints = sides7;
                break;
            case 8:
                OriginalPoints = sides8;
                break;
            case 9:
                OriginalPoints = sides9;
                break;
            case 10:
                OriginalPoints = sides10;
                break;
            case 11:
                OriginalPoints = sides11;
                break;
            case 12:
                OriginalPoints = sides12;
                break;
            case 13:
                OriginalPoints = sides13;
                break;
            case 14:
                OriginalPoints = sides14;
                break;
            case 15:
                OriginalPoints = sides15;
                break;
            case 16:
                OriginalPoints = ain30;
            
            default:
                break;
        }
        
        
        
        int rot;
        int len = OriginalPoints.length;
        
        if(Shape == 1){
            rot = Rotate7.getValue();
            for(int i=0;i<len;i++){
                if(i%2 == 0){
                    double X = OriginalPoints[i];
                    double Y = OriginalPoints[i+1];
                    X = X - 275;
                    Y = Y - 252;
                    double deg = Math.toRadians(rot);
                    tempOut.add(X*cos(deg) - Y*sin(deg));
                    tempOut.add(Y*cos(deg) + X*sin(deg));
                    
                }    
            }
            int length = tempOut.size();
            Shape1Points.clear();
            for(int j=0;j<length;j++){
                if(j%2 == 0){
                    Shape1Points.add(tempOut.get(j)+275);
                    Shape1Points.add(tempOut.get(j+1)+252);
                } 
            }
            drawPerfectlyBalanced(1);
        }
        else if(Shape == 2){
            rot = Rotate8.getValue();
            for(int i=0;i<len;i++){
                if(i%2 == 0){
                    double X = OriginalPoints[i];
                    double Y = OriginalPoints[i+1];
                    X = X - 275;
                    Y = Y - 252;
                    double deg = Math.toRadians(rot);
                    tempOut.add(X*cos(deg) - Y*sin(deg));
                    tempOut.add(Y*cos(deg) + X*sin(deg));
                    
                }    
            }
            int length = tempOut.size();
            Shape2Points.clear();
            for(int j=0;j<length;j++){
                if(j%2 == 0){
                    Shape2Points.add(tempOut.get(j)+275);
                    Shape2Points.add(tempOut.get(j+1)+252);
                } 
            }
            drawPerfectlyBalanced(2);
        }
        else if(Shape == 3){
            rot = Rotate9.getValue();
            for(int i=0;i<len;i++){
                if(i%2 == 0){
                    double X = OriginalPoints[i];
                    double Y = OriginalPoints[i+1];
                    X = X - 275;
                    Y = Y - 252;
                    double deg = Math.toRadians(rot);
                    tempOut.add(X*cos(deg) - Y*sin(deg));
                    tempOut.add(Y*cos(deg) + X*sin(deg));
                    
                }    
            }
            int length = tempOut.size();
            Shape3Points.clear();
            for(int j=0;j<length;j++){
                if(j%2 == 0){
                    Shape3Points.add(tempOut.get(j)+275);
                    Shape3Points.add(tempOut.get(j+1)+252);
                } 
            }
            drawPerfectlyBalanced(3);
        }
        else if(Shape == 4){
            rot = Rotate10.getValue();
            for(int i=0;i<len;i++){
                if(i%2 == 0){
                    double X = OriginalPoints[i];
                    double Y = OriginalPoints[i+1];
                    X = X - 275;
                    Y = Y - 252;
                    double deg = Math.toRadians(rot);
                    tempOut.add(X*cos(deg) - Y*sin(deg));
                    tempOut.add(Y*cos(deg) + X*sin(deg));
                    
                }    
            }
            int length = tempOut.size();
            Shape4Points.clear();
            for(int j=0;j<length;j++){
                if(j%2 == 0){
                    Shape4Points.add(tempOut.get(j)+275);
                    Shape4Points.add(tempOut.get(j+1)+252);
                } 
            }
            drawPerfectlyBalanced(4);
        }
        else if(Shape == 5){
            rot = Rotate12.getValue();
            for(int i=0;i<len;i++){
                if(i%2 == 0){
                    double X = OriginalPoints[i];
                    double Y = OriginalPoints[i+1];
                    X = X - 275;
                    Y = Y - 252;
                    double deg = Math.toRadians(rot);
                    tempOut.add(X*cos(deg) - Y*sin(deg));
                    tempOut.add(Y*cos(deg) + X*sin(deg));
                    
                }    
            }
            int length = tempOut.size();
            Shape5Points.clear();
            for(int j=0;j<length;j++){
                if(j%2 == 0){
                    Shape5Points.add(tempOut.get(j)+275);
                    Shape5Points.add(tempOut.get(j+1)+252);
                } 
            }
            drawPerfectlyBalanced(5);
        }

    }
    
    private void drawPerfectlyBalanced(int index){
        Graphics panel = jPanel6.getGraphics();
        Xchrono(panel);
        int ShapeSize = 0;

        int Shape1Size = Shape1Points.size();
        ShapeSize = Shape1Size/2;
        drawGon(1);

        int Shape2Size = Shape2Points.size();
        ShapeSize = Shape2Size/2;
        drawGon(2);

        int Shape3Size = Shape3Points.size();
        ShapeSize = Shape3Size/2;
        drawGon(3);

        int Shape4Size = Shape4Points.size();
        ShapeSize = Shape4Size/2;
        drawGon(4);

        int Shape5Size = Shape5Points.size(); 
        ShapeSize = Shape5Size/2;
        drawGon(5);
    }
    
    private void drawGon(int index){
        ArrayList<Double> drawPoints = new ArrayList<>();
        
        if(index == 1){
            drawPoints = new ArrayList<>(Shape1Points);
        }
        else if(index == 2){
            drawPoints = new ArrayList<>(Shape2Points);
        }
        else if(index == 3){
            drawPoints = new ArrayList<>(Shape3Points);
        }
        else if(index == 4){
            drawPoints = new ArrayList<>(Shape4Points);
        }
        else if(index == 5){
            drawPoints = new ArrayList<>(Shape5Points);
        }
        int drawSize = drawPoints.size();
        
        Graphics panel = jPanel6.getGraphics();
        panel.setColor(Color.yellow);
        Graphics2D g2 = (Graphics2D) panel;
        g2.setStroke(new BasicStroke(3));
        if(drawSize > 3){
            for(int i=0;i<drawSize-3;i++){
                if(i%2 == 0){
                    panel.drawLine((int)Math.round(drawPoints.get(i)), (int)Math.round(drawPoints.get(i+1)), (int)Math.round(drawPoints.get(i+2)), (int)Math.round(drawPoints.get(i+3)));
                }
            }
        }
        if(drawSize > 1){
            panel.drawLine((int)Math.round(drawPoints.get(drawSize-2)), (int)Math.round(drawPoints.get(drawSize-1)), (int)Math.round(drawPoints.get(0)), (int)Math.round(drawPoints.get(1)));
        }
    }
    
    private void RotNum7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum7ActionPerformed
        
    }//GEN-LAST:event_RotNum7ActionPerformed

    private void Rotate7StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate7StateChanged
        int sides = Shape1.getSelectedIndex();
        balancedRotate(1,sides);
    }//GEN-LAST:event_Rotate7StateChanged

    private void RotNum8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RotNum8ActionPerformed

    private void Rotate8StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate8StateChanged
        int sides = Shape2.getSelectedIndex();
        balancedRotate(2, sides);
    }//GEN-LAST:event_Rotate8StateChanged

    private void ChannelSelection2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChannelSelection2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChannelSelection2ActionPerformed

    private void Shape2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Shape2ActionPerformed
        int sides = Shape2.getSelectedIndex();
        balancedRotate(2, sides);
    }//GEN-LAST:event_Shape2ActionPerformed

    private void Shape3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Shape3ActionPerformed
        int sides = Shape3.getSelectedIndex();
        balancedRotate(3, sides);
    }//GEN-LAST:event_Shape3ActionPerformed

    private void ChannelSelection3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChannelSelection3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChannelSelection3ActionPerformed

    private void Rotate9StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate9StateChanged
        int sides = Shape3.getSelectedIndex();
        balancedRotate(3, sides);
    }//GEN-LAST:event_Rotate9StateChanged

    private void RotNum9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RotNum9ActionPerformed

    private void Shape4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Shape4ActionPerformed
        int sides = Shape4.getSelectedIndex();
        balancedRotate(4, sides);
    }//GEN-LAST:event_Shape4ActionPerformed

    private void ChannelSelection4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChannelSelection4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChannelSelection4ActionPerformed

    private void Rotate10StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate10StateChanged
        int sides = Shape4.getSelectedIndex();
        balancedRotate(4, sides);
    }//GEN-LAST:event_Rotate10StateChanged

    private void RotNum10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RotNum10ActionPerformed

    private void Shape5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Shape5ActionPerformed
        int sides = Shape5.getSelectedIndex();
        balancedRotate(5, sides);
    }//GEN-LAST:event_Shape5ActionPerformed

    private void ChannelSelection5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChannelSelection5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChannelSelection5ActionPerformed

    private void Rotate11StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate11StateChanged
        int sides = Shape5.getSelectedIndex();
        balancedRotate(5, sides);
    }//GEN-LAST:event_Rotate11StateChanged

    private void RotNum11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RotNum11ActionPerformed

    private void Shape6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Shape6ActionPerformed
        int sides = Shape6.getSelectedIndex();
        balancedRotate(5, sides);
    }//GEN-LAST:event_Shape6ActionPerformed

    private void ChannelSelection6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChannelSelection6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChannelSelection6ActionPerformed

    private void Rotate12StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Rotate12StateChanged
        int sides = Shape6.getSelectedIndex();
        balancedRotate(5, sides);
    }//GEN-LAST:event_Rotate12StateChanged
    
    public static double angleBetweenCoordinates(double x2, double y2) {
        double centreX = 275;
        double centreY = 252;
        double x1 = 275;
        double y1 = 22.5;
        double aX = x1 - centreX;
        double aY = y1 - centreY;
        double bX = x2 - centreX;
        double bY = y2 - centreY;
        double dotProduct = aX * bX + aY * bY;
        double magnitudeA = Math.sqrt(aX * aX + aY * aY);
        double magnitudeB = Math.sqrt(bX * bX + bY * bY);
        double cosine = dotProduct / (magnitudeA * magnitudeB);
        double angle = Math.acos(cosine);
        angle = Math.toDegrees(angle);
        if(x2 < 275){
            angle = 360-angle;
        }
        return angle;
}
    
    
    private void RotNum12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotNum12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RotNum12ActionPerformed
   

    //16,000 ticks per rotation
    public Sequence properPlaySound(List<Integer> events, float stepAsInt)throws MidiUnavailableException, InterruptedException{
        try{
            
            float tempSteps = 12000/stepAsInt;
            long steps = (long)tempSteps;
                       
            Sequence seq = new Sequence(30, 100);
            Track mainTrack = seq.createTrack();
            
            ShortMessage onMsg = new ShortMessage(ShortMessage.NOTE_ON, 0, 60, 90);
            ShortMessage offMsg = new ShortMessage(ShortMessage.NOTE_OFF, 0, 60, 90);
            int duration = 400;
            
            int temp = 0;
            for(int counter = 0; counter <= 8; counter++){ 
                if(counter == events.get(temp)){
                    MidiEvent noteOn = new MidiEvent(onMsg, (steps*counter) + 50);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + steps*counter + 50);

                    mainTrack.add(noteOn); 
                    mainTrack.add(noteOff);
                    temp = temp + 1;
                    if(temp >= events.size()){
                        temp = 0;
                    }                    
                }

            }
           // System.out.println(seq.getTickLength());
            
            

            /*
            Sequencer player;
            player = MidiSystem.getSequencer(false);
            Transmitter t = player.getTransmitter();
            t.setReceiver(synth.getReceiver());
            player.open();
            player.setSequence(seq);
            player.start();
            */
            return seq;
        } catch(Exception e){
            System.out.println("UH OH Spaghettio!");
            System.out.println(e);
        }
        return null;
    }
    
    public Sequence properPlaySound2(List<Integer> events, float stepAsInt)throws MidiUnavailableException, InterruptedException{
        try{
            
            float tempSteps = 12000/stepAsInt;
            long steps = (long)tempSteps;
                       
            Sequence seq = new Sequence(30, 100);
            Track mainTrack = seq.createTrack();
            
            ShortMessage onMsg = new ShortMessage(ShortMessage.NOTE_ON, 0, 60, 90);
            ShortMessage offMsg = new ShortMessage(ShortMessage.NOTE_OFF, 0, 60, 90);
            int duration = 400;
            
            int temp = 0;
            for(int counter = 0; counter <= 8; counter++){ 
                if(counter == events.get(temp)){
                    MidiEvent noteOn = new MidiEvent(onMsg, (steps*counter) + 50);
                    MidiEvent noteOff = new MidiEvent(offMsg, duration + steps*counter + 50);

                    mainTrack.add(noteOn); 
                    mainTrack.add(noteOff);
                    temp = temp + 1;
                    if(temp >= events.size()){
                        temp = 0;
                    }                    
                }

            }
            return seq;
        } catch(Exception e){
            System.out.println("UH OH Spaghettio!");
            System.out.println(e);
        }
        return null;
    }
    
    
    public void playSound(int channelNo) throws MidiUnavailableException, InterruptedException{
        try{
            Synthesizer synth = MidiSystem.getSynthesizer();
            synth.open();
            
            MidiChannel[] channel = synth.getChannels();
            channel[0].programChange(0,73);
            channel[1].programChange(0,76);
            channel[2].programChange(0,85);
            channel[3].programChange(0,93);
            channel[4].programChange(0,109);
            
            Sequence seq = new Sequence(30, 100);
            Track mainTrack = seq.createTrack();
            //channel, note, velocity
            ShortMessage onMsg = new ShortMessage(ShortMessage.NOTE_ON, channelNo, 60, 90);
            ShortMessage offMsg = new ShortMessage(ShortMessage.NOTE_OFF, channelNo, 60, 90);
            int duration = 200;
            for(int counter = 1; counter <= 10; counter++){ 
                MidiEvent noteOn = new MidiEvent(onMsg, (600*counter));
                MidiEvent noteOff = new MidiEvent(offMsg, duration + 600*counter);

                mainTrack.add(noteOn); 
                mainTrack.add(noteOff);
            }
            System.out.println(seq.getTickLength());
            
            

            
            Sequencer player;
            player = MidiSystem.getSequencer(false);
            Transmitter t = player.getTransmitter();
            t.setReceiver(synth.getReceiver());
            player.open();
            player.setSequence(seq);
            player.start();
        
        } catch(Exception e){
            System.out.println("ERRRRROOOOOORRRRRRR something went wrong :(");
            System.out.println(e);
        }
    
        
        
        
        
        //Synthesizer synth = MidiSystem.getSynthesizer();
        //synth.open();
        
        
        //Soundbank sb = synth.getDefaultSoundbank();
        //System.out.println(sb);
        //Instrument[] inst = sb.getInstruments();
        //for (Instrument i : inst){
        //    System.out.println(i);
        //}
        //System.out.println(sb.getDescription());
        
        //synth.loadAllInstruments()
        //System.out.println(synth.getLoadedInstruments());
        //System.out.println("*****************************");
       
        /////////////MidiChannel[] channel = synth.getChannels();
        
        //for (MidiChannel mChannel: channel){
        //    System.out.println(mChannel);
        //}
        //System.out.println("*****************************");

        //System.out.println("--------------");
        //Instrument[] loadInst = synth.getLoadedInstruments();
        //for (Instrument i : loadInst){
        //    System.out.println(i);
        //}
        
        /*
        channel[0].programChange(0,127);
        channel[1].programChange(128,104);
        channel[2].programChange(128,120);
        channel[3].programChange(512,125);
        channel[4].programChange(384,126);
        channel[5].programChange(256,124);
        channel[6].programChange(896,125);
        */
        
        /////channel[channelNo].setPolyPressure(90, 10);
        //System.out.println(channel[channelNo].getPolyPressure(90));
        //MidiEvent notes;
        //////channel[channelNo].noteOn(90, 100);
        //channel[channelNo].noteOff(90, 500);
        //notes.getTick();
        //System.out.println(channel[channelNo].getPolyPressure(90));
        //channel[channelNo].getTick();
   
        //wait(50);
        //channel[0].noteOff(60, 100);
        
        //channel.noteOn(60, 500);
        //channel.noteOff(60, 500);
    }
    
    public void createNoteOn(MidiMessage on, long tickPos){
        
    }
    
    public void eventFill(int Ring, int stepNo){
        String eventNo = (String)Event1.getSelectedItem( );
        double eventAsInt = Integer.parseInt(eventNo);
        Graphics tab = jPanel3.getGraphics();
        Integer rotate = Rotate1.getValue();
        
        //drawCirc1(tab, stepNo);
        Graphics home = jPanel5.getGraphics();
        setup(home);
        
    }
    
        
    public void drawCirc1(Graphics tab, String stepNo){
        Integer cent = 260;
        Integer radius = 50;
        Integer rotate = Rotate1.getValue();

        float stepAsInt = Integer.parseInt(stepNo);
        float angleStep = 360/stepAsInt;

        tab.setColor(Color.darkGray);
        tab.fillOval(205,180,140,140);
        tab.setColor(Color.yellow);
        tab.fillOval(223,198,2*(radius+2),2*(radius+2));
        tab.setColor(Color.darkGray);
        tab.fillOval(227, 202, 2*(radius-2), 2*(radius-2));
        tab.setColor(Color.yellow);
        
        String eventNo = (String)Event1.getSelectedItem( );
        float eventAsInt = Integer.parseInt(eventNo);
        
        float change = stepAsInt/eventAsInt;
        
        List<Integer> events = new ArrayList<Integer>();
        events.add(0);
        
        float current = 0;
        for(Integer i = 0; i<eventAsInt-1; i++){
            current = current + change;
            Integer a = Math.round(current);
            events.add(a);
        }
        
        int temp = 0;
        for(Integer counter=0;counter <= stepAsInt - 1;counter++){
            double radians = Math.toRadians(rotate + counter*angleStep);
            Integer x = Math.toIntExact(Math.round(radius*Math.sin(radians)));
            Integer y = Math.toIntExact(Math.round(radius*Math.cos(radians)));

            tab.setColor(Color.yellow);
            tab.fillOval(cent + x,cent - 25 - y,30,30);
            if(counter == events.get(temp)){
                tab.setColor(Color.yellow);
                tab.fillOval(cent + x + 4, cent - 25 - y + 4, 22, 22);
                temp = temp + 1;
                if(temp >= events.size()){
                    temp = 0;
                }
            }
            else{
                tab.setColor(Color.darkGray);
                tab.fillOval(cent + x + 4, cent - 25 - y + 4, 22, 22); 
            }                        
        }
        try{
            properPlaySound(events, stepAsInt);
        } catch (Exception e){
            
        }
        
        
    }
    
    public void drawCirc2(Graphics tab, String stepNo){
        Integer cent = 260;
        Integer radius = 95;
        Integer rotate = Rotate2.getValue();

        float stepAsInt = Integer.parseInt(stepNo);
        float angleStep = 360/stepAsInt;
        
        tab.setColor(Color.darkGray);
        tab.fillOval(160,135,230,230);
        tab.setColor(Color.cyan);
        tab.fillOval(178,153,2*(radius + 2),2*(radius + 2));
        tab.setColor(Color.darkGray);
        tab.fillOval(182,157,2*(radius - 2),2*(radius - 2));

        String eventNo = (String)Event2.getSelectedItem( );
        float eventAsInt = Integer.parseInt(eventNo);
                
        float change = stepAsInt/eventAsInt;
        
        List<Integer> events = new ArrayList<>();
        events.add(0);
        
        float current = 0;
        for(Integer i = 0; i<eventAsInt-1; i++){
            current = current + change;
            Integer a = Math.round(current);
            events.add(a);
        }
        
        int temp = 0;
        for(Integer counter=0;counter <= stepAsInt - 1;counter++){
            double radians = Math.toRadians(rotate + counter*angleStep);
            Integer x = Math.toIntExact(Math.round(radius*Math.sin(radians)));
            Integer y = Math.toIntExact(Math.round(radius*Math.cos(radians)));

            tab.setColor(Color.cyan);
            tab.fillOval(cent + x,cent - 25 - y,30,30);
            
            if(counter == events.get(temp)){
                tab.setColor(Color.cyan);
                tab.fillOval(cent + x,cent - 25 - y,30,30);
                temp = temp + 1;
                if(temp >= events.size()){
                    temp = 0;
                }
            }
            else{
                tab.setColor(Color.darkGray);
                tab.fillOval(cent + x + 4, cent - 25 - y + 4, 22, 22); 
            }
        }
        
        try{
            properPlaySound2(events, stepAsInt);
        } catch (Exception e){
            
        }
        drawCirc1(tab, (String)Step1.getSelectedItem());
    }
    
    public void drawCirc3(Graphics tab, String stepNo){
        Integer cent = 260;
        Integer radius = 140;
        Integer rotate = Rotate3.getValue();

        float stepAsInt = Integer.parseInt(stepNo);
        float angleStep = 360/stepAsInt;

        tab.setColor(Color.darkGray);
        tab.fillOval(110,85,330,330);
        tab.setColor(Color.green);
        tab.fillOval(133,108,2*(radius + 2),2*(radius + 2));
        tab.setColor(Color.darkGray);
        tab.fillOval(137,112,2*(radius - 2),2*(radius - 2));
        
        
        String eventNo = (String)Event3.getSelectedItem( );
        float eventAsInt = Integer.parseInt(eventNo);
                
        float change = stepAsInt/eventAsInt;
        
        List<Integer> events = new ArrayList<Integer>();
        events.add(0);
        
        float current = 0;
        for(Integer i = 0; i<eventAsInt-1; i++){
            current = current + change;
            Integer a = Math.round(current);
            events.add(a);
        }
        
        int temp = 0;
        for(Integer counter=0;counter <= stepAsInt - 1;counter++){
            double radians = Math.toRadians(rotate + counter*angleStep);
            Integer x = Math.toIntExact(Math.round(radius*Math.sin(radians)));
            Integer y = Math.toIntExact(Math.round(radius*Math.cos(radians)));

            tab.setColor(Color.green);
            tab.fillOval(cent + x,cent - 25 - y,30,30);
            
            if(counter == events.get(temp)){
                tab.setColor(Color.green);
                tab.fillOval(cent + x,cent - 25 - y,30,30);
                temp = temp + 1;
                if(temp >= events.size()){
                    temp = 0;
                }
            }
            else{
                tab.setColor(Color.darkGray);
                tab.fillOval(cent + x + 4, cent - 25 - y + 4, 22, 22); 
            }
        }
        drawCirc2(tab, (String)Step2.getSelectedItem());
    }
    
    
    public void drawCirc4(Graphics tab, String stepNo){
        Integer cent = 260;
        Integer radius = 185;
        Integer rotate = Rotate4.getValue();

        float stepAsInt = Integer.parseInt(stepNo);
        float angleStep = 360/stepAsInt;

        tab.setColor(Color.darkGray);
        tab.fillOval(75,50,400,400);
        tab.setColor(Color.red);
        tab.fillOval(87,63,2*(radius + 2),2*(radius + 2));
        tab.setColor(Color.darkGray);
        tab.fillOval(92,67,2*(radius - 2),2*(radius - 2));
        
        
        String eventNo = (String)Event4.getSelectedItem( );
        float eventAsInt = Integer.parseInt(eventNo);
                
        float change = stepAsInt/eventAsInt;
        
        List<Integer> events = new ArrayList<Integer>();
        events.add(0);
        
        float current = 0;
        for(Integer i = 0; i<eventAsInt-1; i++){
            current = current + change;
            Integer a = Math.round(current);
            events.add(a);
        }
        
        int temp = 0;
        for(Integer counter=0;counter <= stepAsInt - 1;counter++){
            double radians = Math.toRadians(rotate + counter*angleStep);
            Integer x = Math.toIntExact(Math.round(radius*Math.sin(radians)));
            Integer y = Math.toIntExact(Math.round(radius*Math.cos(radians)));

            tab.setColor(Color.red);
            tab.fillOval(cent + x,cent - 25 - y,30,30);
            
            if(counter == events.get(temp)){
                tab.setColor(Color.red);
                tab.fillOval(cent + x,cent - 25 - y,30,30);
                temp = temp + 1;
                if(temp >= events.size()){
                    temp = 0;
                }
            }
            else{
                tab.setColor(Color.darkGray);
                tab.fillOval(cent + x + 4, cent - 25 - y + 4, 22, 22); 
            }
        }
        drawCirc3(tab, (String)Step3.getSelectedItem());
    }
    
    
    public void drawCirc5(Graphics tab, String stepNo){
        Integer cent = 260;
        Integer radius = 230;
        Integer rotate = Rotate5.getValue();

        float stepAsInt = Integer.parseInt(stepNo);
        float angleStep = 360/stepAsInt;

        tab.setColor(Color.darkGray);
        tab.fillOval(25,0,500,500);
        tab.setColor(Color.white);
        tab.fillOval(43,18,2*(radius + 2),2*(radius + 2));
        tab.setColor(Color.darkGray);
        tab.fillOval(47,22,2*(radius - 2),2*(radius - 2));
        
        Graphics g = jPanel6.getGraphics();
        /*g.setColor(Color.darkGray);
        g.fillOval(875, 61, 500, 500);
        g.setColor(Color.BLACK);
        g.fillOval(890,76,470,470);
        g.setColor(Color.darkGray);
        g.fillOval(895, 81, 460, 460);
        */
        
        String eventNo = (String)Event5.getSelectedItem( );
        float eventAsInt = Integer.parseInt(eventNo);
                
        float change = stepAsInt/eventAsInt;
        
        List<Integer> events = new ArrayList<Integer>();
        events.add(0);
        
        float current = 0;
        for(Integer i = 0; i<eventAsInt-1; i++){
            current = current + change;
            Integer a = Math.round(current);
            events.add(a);
        }
        
        int temp = 0;
        for(Integer counter=0;counter <= stepAsInt - 1;counter++){
            double radians = Math.toRadians(rotate + counter*angleStep);
            Integer x = Math.toIntExact(Math.round(radius*Math.sin(radians)));
            Integer y = Math.toIntExact(Math.round(radius*Math.cos(radians)));

            tab.setColor(Color.white);
            tab.fillOval(cent + x,cent - 25 - y,30,30);
            
            if(counter == events.get(temp)){
                tab.setColor(Color.white);
                tab.fillOval(cent + x,cent - 25 - y,30,30);
                temp = temp + 1;
                if(temp >= events.size()){
                    temp = 0;
                }
            }
            else{
                tab.setColor(Color.darkGray);
                tab.fillOval(cent + x + 4, cent - 25 - y + 4, 22, 22); 
            }
        }

        drawCirc4(tab, (String)Step4.getSelectedItem());
    }
    public void paint(Graphics g){
        super.paint(g);
        g.setColor(Color.darkGray);
        g.fillOval(875, 61, 500, 500);
        g.setColor(Color.BLACK);
        g.fillOval(890,76,470,470);
        g.setColor(Color.darkGray);
        g.fillOval(895, 81, 460, 460);
        
        Graphics tab = jPanel3.getGraphics();
        tab.setColor(Color.darkGray);
        tab.fillOval(25,0,500,500);
        
        
        //g.fillOval(500, 500, 50, 50);
        
    };

    private void setup(Graphics home){
        home.setColor(Color.darkGray);
        home.fillOval(10,5 + ySkew,30,30);
        home.setColor(Color.yellow);
        home.fillOval(15,10 + ySkew,20,20);
    }
    
    private void setup2(Graphics home){
        home.setColor(Color.darkGray);
        home.fillOval(10,42 + ySkew,30,30);
        home.setColor(Color.cyan);
        home.fillOval(15,47 + ySkew,20,20);
        setup(home);

    }
    
    private void setup3(Graphics home){
        home.setColor(Color.darkGray);
        home.fillOval(10,79 + ySkew,30,30);
        home.setColor(Color.green);
        home.fillOval(15,84 + ySkew,20,20);
        setup2(home);

    }
    
    private void setup4(Graphics home){
        home.setColor(Color.darkGray);
        home.fillOval(10,116 + ySkew,30,30);
        home.setColor(Color.red);
        home.fillOval(15,121 + ySkew,20,20);
        setup3(home);
    }
    
    private void setup5(Graphics home){
        home.setColor(Color.darkGray);
        home.fillOval(10,153 + ySkew,30,30);
        home.setColor(Color.blue);
        home.fillOval(15,158 + ySkew,20,20);
        setup4(home);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MusicEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MusicEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MusicEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MusicEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MusicEditorUI().setVisible(true);
            }
        }); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ChannelSelection1;
    private javax.swing.JComboBox<String> ChannelSelection2;
    private javax.swing.JComboBox<String> ChannelSelection3;
    private javax.swing.JComboBox<String> ChannelSelection4;
    private javax.swing.JComboBox<String> ChannelSelection5;
    private javax.swing.JComboBox<String> ChannelSelection6;
    private javax.swing.JButton ClosePRE;
    private javax.swing.JComboBox<String> Event1;
    private javax.swing.JComboBox<String> Event2;
    private javax.swing.JComboBox<String> Event3;
    private javax.swing.JComboBox<String> Event4;
    private javax.swing.JComboBox<String> Event5;
    private javax.swing.JButton LoadButton;
    private javax.swing.JButton OpenPRE;
    private javax.swing.JButton PlayButton;
    private javax.swing.JTextField RotNum1;
    private javax.swing.JTextField RotNum10;
    private javax.swing.JTextField RotNum11;
    private javax.swing.JTextField RotNum12;
    private javax.swing.JTextField RotNum2;
    private javax.swing.JTextField RotNum3;
    private javax.swing.JTextField RotNum4;
    private javax.swing.JTextField RotNum5;
    private javax.swing.JTextField RotNum7;
    private javax.swing.JTextField RotNum8;
    private javax.swing.JTextField RotNum9;
    private javax.swing.JSlider Rotate1;
    private javax.swing.JSlider Rotate10;
    private javax.swing.JSlider Rotate11;
    private javax.swing.JSlider Rotate12;
    private javax.swing.JSlider Rotate2;
    private javax.swing.JSlider Rotate3;
    private javax.swing.JSlider Rotate4;
    private javax.swing.JSlider Rotate5;
    private javax.swing.JSlider Rotate7;
    private javax.swing.JSlider Rotate8;
    private javax.swing.JSlider Rotate9;
    private javax.swing.JComboBox<String> Shape1;
    private javax.swing.JComboBox<String> Shape2;
    private javax.swing.JComboBox<String> Shape3;
    private javax.swing.JComboBox<String> Shape4;
    private javax.swing.JComboBox<String> Shape5;
    private javax.swing.JComboBox<String> Shape6;
    private javax.swing.JComboBox<String> Step1;
    private javax.swing.JComboBox<String> Step2;
    private javax.swing.JComboBox<String> Step3;
    private javax.swing.JComboBox<String> Step4;
    private javax.swing.JComboBox<String> Step5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton58;
    private javax.swing.JButton jButton59;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton60;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton62;
    private javax.swing.JButton jButton63;
    private javax.swing.JButton jButton64;
    private javax.swing.JButton jButton65;
    private javax.swing.JButton jButton66;
    private javax.swing.JButton jButton67;
    private javax.swing.JButton jButton68;
    private javax.swing.JButton jButton69;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton70;
    private javax.swing.JButton jButton71;
    private javax.swing.JButton jButton72;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
